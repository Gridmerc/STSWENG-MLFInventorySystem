[{"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\index.js":"1","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\App.js":"3","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Login\\Login.js":"4","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\MainMenu.js":"5","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\config.js":"6","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\LeftMenu.js":"7","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\artistCard.js":"8","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Banner.js":"9","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\CashierMenu.js":"10","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Counter.js":"11","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\AdminMenu.js":"12","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\ManageEventsWindow.js":"13","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\ManageArtistsWindow.js":"14","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\ManageItemsWindow.js":"15","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\ManageBundlesWindow.js":"16","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\SalesReportWindow.js":"17","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\AddArtistForm.js":"18","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\AddEventsForm.js":"19","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\EditEventsForm.js":"20","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\EditArtistForm.js":"21","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\AddItemsForm.js":"22","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\EditItemsForm.js":"23","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\EditBundlesForm.js":"24","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\AddBundlesForm.js":"25","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\FinancialWindow.js":"26","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\NewOrderWindow.js":"27","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\ProtectedRoute.js":"28"},{"size":502,"mtime":1612279011011,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1612279011027,"results":"31","hashOfConfig":"30"},{"size":1102,"mtime":1612784319655,"results":"32","hashOfConfig":"30"},{"size":2678,"mtime":1612784319668,"results":"33","hashOfConfig":"30"},{"size":3300,"mtime":1612691270370,"results":"34","hashOfConfig":"30"},{"size":414,"mtime":1612439230680,"results":"35","hashOfConfig":"30"},{"size":414,"mtime":1612630276858,"results":"36","hashOfConfig":"30"},{"size":4395,"mtime":1612440486064,"results":"37","hashOfConfig":"30"},{"size":5171,"mtime":1612691270373,"results":"38","hashOfConfig":"30"},{"size":2636,"mtime":1612691270368,"results":"39","hashOfConfig":"30"},{"size":805,"mtime":1612691270374,"results":"40","hashOfConfig":"30"},{"size":4279,"mtime":1612440057131,"results":"41","hashOfConfig":"30"},{"size":1502,"mtime":1612692422914,"results":"42","hashOfConfig":"30"},{"size":1701,"mtime":1612439909011,"results":"43","hashOfConfig":"30"},{"size":2095,"mtime":1612439833928,"results":"44","hashOfConfig":"30"},{"size":2089,"mtime":1612692357723,"results":"45","hashOfConfig":"30"},{"size":10712,"mtime":1612692326597,"results":"46","hashOfConfig":"30"},{"size":4084,"mtime":1612439230665,"results":"47","hashOfConfig":"30"},{"size":5604,"mtime":1612691270347,"results":"48","hashOfConfig":"30"},{"size":8131,"mtime":1612691270366,"results":"49","hashOfConfig":"30"},{"size":6810,"mtime":1612439230666,"results":"50","hashOfConfig":"30"},{"size":7905,"mtime":1612439230670,"results":"51","hashOfConfig":"30"},{"size":10506,"mtime":1612439230671,"results":"52","hashOfConfig":"30"},{"size":7703,"mtime":1612749792731,"results":"53","hashOfConfig":"30"},{"size":12928,"mtime":1612749792729,"results":"54","hashOfConfig":"30"},{"size":10097,"mtime":1612760463033,"results":"55","hashOfConfig":"30"},{"size":13334,"mtime":1612784319823,"results":"56","hashOfConfig":"30"},{"size":549,"mtime":1612784319669,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1pu48om",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"60"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\index.js",[],["131","132"],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\App.js",["133"],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Login\\Login.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\MainMenu.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\config.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\LeftMenu.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\artistCard.js",["134","135"],"// JavaScript source code\r\nimport React, { Component, useState } from 'react';\r\nimport { Modal} from 'react-bootstrap'\r\nimport config from '../../config'\r\n\r\nclass ArtistCardsList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            artist: [],\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artist !== prevProps.artist) {\r\n          this.setState({artist: this.props.artist})\r\n        }\r\n      }\r\n\r\n    render() {\r\n        console.log(this.state.artist);\r\n        const artistCards = this.state.artist.map(artist => <ArtistCard   key={artist.artistID}\r\n                                                                          artistName={artist.artistName}\r\n                                                                          income={artist.income} \r\n                                                                          items={artist.items}\r\n                                                                          bundles={artist.bundles}/>)                                           \r\n        return (\r\n            <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 p-2 mx-1 w-100\">\r\n                {artistCards}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ArtistCard(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    var itemList = [];\r\n    var bundleList = [];\r\n\r\n    if(props.items)\r\n    {\r\n        itemList = props.items.filter(function(item){\r\n            if (typeof item === 'undefined' || item === false) {\r\n              return false; // skip\r\n            }\r\n            return true;\r\n          }).map(item => <ArtistCardItem  key={item._id}\r\n            itemName={item.itemName} \r\n            stocksQuantity={item.stockQuantity}\r\n            itemPrice={item.itemPrice}\r\n            itemsSold={item.itemsSold}/>)  \r\n    }\r\n    \r\n    if(props.bundles)\r\n    {\r\n        bundleList = props.bundles.filter(function(bundle){\r\n            if (typeof bundle === 'undefined' || bundle === false) {\r\n              return false; // skip\r\n            }\r\n            return true;\r\n          }).map(bundle=> <ArtistCardItem  key={bundle._id}\r\n            itemName={bundle.bundleName} \r\n            stocksQuantity={bundle.bundleStock}\r\n            itemPrice={bundle.bundlePrice}\r\n            itemsSold={bundle.bundleSold}/>)  \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col mb-2 px-2\" id=\"{{artistID}}-card\">\r\n                <div className=\"card mx-0\">\r\n                    <div className=\"card-body\">\r\n                    <a href=\"#\" className=\"stretched-link\" onClick={handleShow} style={{ size: \"0px\"}}>\r\n                        <h5>{props.artistName}</h5>\r\n                    </a>\r\n                    <p className=\"card-text\"><b>PHP {props.income} </b> </p>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={show} onHide={handleClose} id=\"artistModal\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"artistModalTitle\">{props.artistName}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead bg-secondary text-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">Item/Bundle</th>\r\n                                <th scope=\"col\">Stocks</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Quantity sold</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"artistSales\" >\r\n                            {itemList}\r\n                            {bundleList}\r\n                        </tbody>\r\n                    </table>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ArtistCardItem(props) {\r\n    return(\r\n    <tr>\r\n        <td> {props.itemName}       </td>\r\n        <td> {props.stocksQuantity} </td>\r\n        <td> PHP {props.itemPrice}  </td>\r\n        <td> {props.itemsSold} </td>\r\n    </tr>    \r\n    );\r\n}\r\n\r\nexport default ArtistCardsList;\r\n","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Banner.js",["136","137","138","139"],"import React, {Component} from 'react';\r\nimport Counter from './Counter';\r\nimport BootStrap, {NavDropdown} from 'react-bootstrap'\r\nimport config from '../../config'\r\nclass Banner extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            counters: [\r\n                {id: 1, value: 0}, /* sold */\r\n                {id: 2, value: 0}, /* days left */\r\n                {id: 3, value: 0}, /* hours left */\r\n                {id: 4, value: 0}, /* minutes left */\r\n                {id: 5, value: 0}  /* seconds left */\r\n            ],\r\n            totalSold: 0\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({totalSold: this.props.totalSold})\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.totalSold !== prevProps.totalSold) {\r\n          this.setState({totalSold: this.props.totalSold})\r\n        }\r\n        console.log(this.state.totalSold)\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const response = await fetch(config.API_URI + '/login', {\r\n          method: 'GET',\r\n        });\r\n        const body = await response.text();\r\n        this.props.history.push(\"/\");\r\n      };\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"Header\">\r\n                <div id=\"upperSection\" className=\"container mt-4\">\r\n                    <div className=\"card d-flex flex-row bg-secondary text-light\" style={{width: \"69.3rem\",  height: \"10rem\"}}>\r\n                        <div className=\"SalesCounter\">\r\n                            <div id=\"salesCounter\" className=\"d-flex flex-col text-center\">\r\n                                <div id=\"soldCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberSold\" className=\"font-weight-bold\">\r\n                                        <Counter key={0} value={this.state.totalSold} id=\"counter-sold\" />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">sold</h5>\r\n                                </div>\r\n                                <div id=\"dayCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberDays\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[1].id} value={this.state.counters[1].value} id={this.state.counters[1].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">day left</h5>\r\n                                </div>\r\n                                <div id=\"hoursCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberHours\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[2].id} value={this.state.counters[2].value} id={this.state.counters[2].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">hours left</h5>\r\n                                </div>\r\n                                <div id=\"minutesCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberMinutes\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[3].id} value={this.state.counters[3].value} id={this.state.counters[3].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">minutes left</h5>\r\n                                </div>\r\n                                <div id=\"secondsCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberSeconds\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[4].id} value={this.state.counters[4].value} id={this.state.counters[4].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">seconds left</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <input type=\"hidden\" id=\"totalSeconds\" value=\"totalSeconds\" />\r\n\r\n                        <div id=\"userMenuIcon\">\r\n                            <img id=\"logoImageGrey\" src=\"photo/logo-grey.png\" />\r\n                        </div>\r\n\r\n                        <div className=\"UserMenu\">\r\n                            <div id=\"userMenu\" className=\"d-flex flex-col text-left\">\r\n                                <div id=\"userIcon\" className=\"col\">\r\n                                    <img id=\"userIconImage\" src=\"../photo/icon-user.png\" />\r\n                                </div>\r\n\r\n                                <NavDropdown title=\"User\" id=\"user-dropdown\">\r\n                                <NavDropdown.Item eventKey=\"1.1\" onClick={this.handleSubmit}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Banner;","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\CashierMenu.js",["140","141","142","143"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap'\r\n\r\nimport NewOrderWindow from \"./NewOrderWindow\";\r\nimport FinancialWindow from \"./FinancialWindow\";\r\nimport SalesReportWindow from \"../Home/SalesReportWindow\";\r\n\r\n\r\nconst CashierMenu = (props) => {\r\n\r\n    const [artists, setArtists] = useState([]);\r\n    useEffect(() => {\r\n          setArtists(props.artist);\r\n    });\r\n    \r\n    const [newOrderShow, setNewOrderShow] = useState(false);\r\n    const [financialShow, setFinancialShow] = useState(false);\r\n    const [salesReportShow, setSalesReportShow] = useState(false);\r\n\r\n    const handleNewOrderClose = () => setNewOrderShow(false);\r\n    const handleNewOrderShow = () => setNewOrderShow(true);\r\n\r\n    const handleFinancialClose = () => setFinancialShow(false);\r\n    const handleFinancialShow = () => setFinancialShow(true);\r\n\r\n    const handleSalesReportClose = () => setSalesReportShow(false);\r\n    const handleSalesReportShow = () => setSalesReportShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Card id=\"leftMenu\" className=\"card p-3\" style={{ width: \"20rem\" }}>\r\n                <Nav.Item id=\"newOrderButtonSection\" className=\"nav-item text-center mb-2\">\r\n                    <Button id=\"newOrderButton\" className=\"btn btn-secondary btn-md col-11\" onClick={handleNewOrderShow} data-target=\"#newOrderWindow\">new order</Button>\r\n                </Nav.Item>\r\n                <hr />\r\n                <Nav.Item id=\"stocksSection\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">stocks</h6>\r\n                    <Nav.Link id=\"restockItem\" href=\"#\" className=\"nav-link\" onClick={handleFinancialShow} data-target=\"#financialWindow\">Restock item</Nav.Link>\r\n                </Nav.Item>\r\n                <hr />\r\n                <Nav.Item id=\"salesReportSection\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">sales report</h6>\r\n                    <Nav.Link id=\"currentSalesReport\" href=\"#\" className=\"nav-link\" onClick={handleSalesReportShow} data-target=\"#salesReportWindow\">Current sales report</Nav.Link>\r\n                </Nav.Item>\r\n            </Card>\r\n\r\n            <div id=\"modalSection\">\r\n                <NewOrderWindow handleClose={handleNewOrderClose} show={newOrderShow} artists={artists}/>\r\n                <FinancialWindow handleClose={handleFinancialClose} show={financialShow} artists={artists}/>\r\n                <SalesReportWindow handleClose={handleSalesReportClose} show={salesReportShow} artists={artists}/>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default CashierMenu","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Counter.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\AdminMenu.js",["144","145","146","147","148"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport ManageArtistsWindow from \"./Artists/ManageArtistsWindow\";\r\nimport ManageItemsWindow from \"./Items/ManageItemsWindow\";\r\nimport ManageBundlesWindow from \"./Bundles/ManageBundlesWindow\";\r\nimport manageEventsWindow from \"./Events/ManageEventsWindow\";\r\nimport SalesReportWindow from \"../Home/SalesReportWindow\";\r\n\r\nconst AdminMenu = (props) => {\r\n\r\n    const [artists, setArtists] = useState([]);\r\n    useEffect(() => {\r\n          setArtists(props.artist);\r\n    });\r\n\r\n    const [manageArtistsShow, setManageArtistsShow] = useState(false);\r\n    const [manageItemsShow, setManageItemsShow] = useState(false);\r\n    const [manageBundlesShow, setManageBundlesShow] = useState(false);\r\n    const [manageEventsShow, setManageEventsShow] = useState(false);\r\n    const [salesReportShow, setSalesReportShow] = useState(false);\r\n\r\n    const handleManageArtistsClose = () => setManageArtistsShow(false);\r\n    const handleManageArtistsShow = () => setManageArtistsShow(true);\r\n\r\n    const handleManageItemsClose = () => setManageItemsShow(false);\r\n    const handleManageItemsShow = () => setManageItemsShow(true);\r\n\r\n    const handleManageBundlesClose= () => setManageBundlesShow(false);\r\n    const handleManageBundlesShow = () => setManageBundlesShow(true);\r\n\r\n    const handleManageEventsClose = () => setManageEventsShow(false);\r\n    const handleManageEventsShow = () => setManageEventsShow(true);\r\n\r\n    const handleSalesReportClose = () => setSalesReportShow(false);\r\n    const handleSalesReportShow = () => setSalesReportShow(true);\r\n    return(\r\n        <div>\r\n            <Card id=\"leftMenu\" className=\"card p-3\" style={{ width: \"20rem\" }}>\r\n                <Nav.Item  id=\"manageMenu\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">manage</h6>\r\n                    <Nav.Item id=\"manageArtistsItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageArtists\" href=\"#a\" className=\"nav-link\" onClick={handleManageArtistsShow} data-target=\"#manageArtistsWindow\">Manage artists</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item id=\"manageItemsItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageItems\" href=\"#\" className=\"nav-link\"  onClick={handleManageItemsShow} data-target=\"#manageItemsWindow\">Manage items</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item id=\"manageBundlesItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageBundles\" href=\"#\" className=\"nav-link\"  onClick={handleManageBundlesShow} data-target=\"#manageBundlesWindow\">Manage bundles</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item id=\"manageEventsItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageEvents\" href=\"#\" className=\"nav-link\" onClick={handleManageEventsShow}   data-target=\"#manageEventsWindow\">Manage events</Nav.Link>\r\n                    </Nav.Item>\r\n                    \r\n                </Nav.Item>\r\n                <hr />\r\n                <Nav.Item id=\"salesReportSection\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">sales report</h6>\r\n                    <Nav.Item id=\"salesReportItem\" className=\"text-center\">\r\n                    <Nav.Link id=\"currentSalesReport\" href=\"#\" className=\"nav-link\" onClick={handleSalesReportShow} data-target=\"#salesReportWindow\">Current sales report</Nav.Link>\r\n                    </Nav.Item>\r\n                    \r\n                </Nav.Item>\r\n            </Card>\r\n\r\n            <div id=\"modalSection\">\r\n                <ManageArtistsWindow handleClose={handleManageArtistsClose}show={manageArtistsShow}/>\r\n                <ManageItemsWindow handleClose={handleManageItemsClose}  show={manageItemsShow} />\r\n                <ManageBundlesWindow handleClose={handleManageBundlesClose} show={manageBundlesShow}/>\r\n                {manageEventsWindow(handleManageEventsClose, manageEventsShow)}\r\n                <SalesReportWindow handleClose={handleSalesReportClose} show={salesReportShow} artists={artists} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n/*   \r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AdminMenu","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\ManageEventsWindow.js",["149","150","151","152"],"import React from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport EditEventsForm from './EditEventsForm';\r\nimport AddEventsForm from './AddEventsForm';\r\n\r\nfunction ManageEventsWindow(handleClose, show){\r\n    return (\r\n       <Modal onHide={handleClose} id=\"manageEventsWindow\" show={show} size=\"lg\">\r\n                <Modal.Header className=\"bg-white\" closeButton>\r\n                    <Modal.Title>Manage Events</Modal.Title>\r\n                </Modal.Header>\r\n                <div className=\"modal-body\">\r\n                    <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageEventsNav\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" id=\"editEventsOption\" data-toggle=\"tab\" href=\"#editEventsSection\" role=\"tab\" aria-controls=\"editEventsSection\" aria-selected=\"true\">Edit</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"addEventsOption\" data-toggle=\"tab\" href=\"#addEventsSection\" role=\"tab\" aria-controls=\"addEventsSection\" aria-selected=\"false\">Add</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content p-2\" id=\"manageBundleList\">\r\n                        <EditEventsForm />\r\n                        <AddEventsForm />\r\n                    </div>\r\n                </div>\r\n       </Modal>\r\n    );\r\n}\r\n\r\nexport default ManageEventsWindow","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\ManageArtistsWindow.js",["153","154","155","156"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport AddArtistForm from \"./AddArtistForm\";\r\nimport EditArtistForm from \"./EditArtistForm\"\r\nclass ManageArtistsWindow extends Component {\r\n    \r\n    render(){\r\n        return (\r\n            <Modal onHide={this.props.handleClose} id=\"manageArtistsWindow\" show={this.props.show} size=\"lg\">\r\n            <div className=\"modal-content\">\r\n                 <Modal.Header className=\"bg-white\" closeButton>\r\n                     <Modal.Title>Manage Artists</Modal.Title>\r\n                 </Modal.Header>\r\n        \r\n                <div className=\"modal-body\">\r\n                    <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageArtistsNav\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" id=\"editArtistsOption\" data-toggle=\"tab\" href=\"#editArtistsSection\" role=\"tab\" aria-controls=\"editArtistsSection\" aria-selected=\"true\">Edit</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"addArtistsOption\" data-toggle=\"tab\" href=\"#addArtistsSection\" role=\"tab\" aria-controls=\"addArtistsSection\" aria-selected=\"false\">Add</a>\r\n                        </li>\r\n                    </ul>\r\n        \r\n                    <div className=\"tab-content p-2\" id=\"manageArtistList\">\r\n                        <EditArtistForm />\r\n                        <AddArtistForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n            </Modal>\r\n         );\r\n    }\r\n   }\r\n\r\n   export default ManageArtistsWindow","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\ManageItemsWindow.js",["157","158","159","160"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport AddItemsForm from './AddItemsForm';\r\nimport EditItemsForm from './EditItemsForm';\r\n\r\nclass ManageItemsWindow extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtistID: \"\",\r\n        }\r\n      }\r\n      componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal onHide={this.props.handleClose} id=\"manageItemsWindow\" show={this.props.show} size=\"lg\">\r\n                <div className=\"modal-content\">\r\n                     <Modal.Header className=\"bg-white\" closeButton>\r\n                         <Modal.Title>Manage Items</Modal.Title>\r\n                     </Modal.Header>\r\n                     <div className=\"modal-body\">\r\n                         <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageArtistsNav\" role=\"tablist\">\r\n                             <li className=\"nav-item\">\r\n                                 <a className=\"nav-link active\" id=\"editItemOption\" data-toggle=\"tab\" href=\"#editItemSection\" role=\"tab\" aria-controls=\"editItemSection\" aria-selected=\"true\">Edit</a>\r\n                             </li>\r\n                             <li className=\"nav-item\">\r\n                                 <a className=\"nav-link\" id=\"addItemOption\" data-toggle=\"tab\" href=\"#addItemSection\" role=\"tab\" aria-controls=\"addItemSection\" aria-selected=\"false\">Add</a>\r\n                             </li>\r\n                         </ul>\r\n     \r\n                         <div className=\"tab-content p-2\" id=\"manageItemList\">\r\n                            <EditItemsForm />\r\n                            <AddItemsForm />\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n            </Modal>\r\n         );\r\n    }\r\n    \r\n}\r\n\r\nexport default ManageItemsWindow","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\ManageBundlesWindow.js",["161","162","163","164"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport AddBundlesForm from './AddBundlesForm';\r\nimport EditBundlesForm from './EditBundlesForm';\r\n\r\nclass ManageBundlesWindow extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtistID: \"\",\r\n        }\r\n      }\r\n      componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal onHide={this.props.handleClose} id=\"manageBundlesWindow\" show={this.props.show} size=\"lg\">\r\n             <div className=\"modal-content\">\r\n                 <Modal.Header className=\"bg-white\" closeButton>\r\n                     <Modal.Title>Manage Bundles</Modal.Title>\r\n                 </Modal.Header>\r\n                 <div className=\"modal-body\">\r\n                     <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageBundlesNav\" role=\"tablist\">\r\n                         <li className=\"nav-item\">\r\n                             <a className=\"nav-link active\" id=\"editBundleOption\" data-toggle=\"tab\" href=\"#editBundlesSection\" role=\"tab\" aria-controls=\"editBundlesSection\" aria-selected=\"true\">Edit</a>\r\n                         </li>\r\n                         <li className=\"nav-item\">\r\n                             <a className=\"nav-link\" id=\"addBundleOption\" data-toggle=\"tab\" href=\"#addBundlesSection\" role=\"tab\" aria-controls=\"addBundlesSection\" aria-selected=\"false\" onClick={()=>this.forceUpdate()}>Add</a>\r\n                         </li>\r\n                     </ul>\r\n                     <div className=\"tab-content p-2\" id=\"manageBundleList\">\r\n                        <EditBundlesForm />\r\n                        <AddBundlesForm />\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n            </Modal>\r\n         );\r\n    }\r\n    \r\n}\r\n\r\nexport default ManageBundlesWindow","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\SalesReportWindow.js",["165","166","167","168","169","170","171","172","173"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport config from '../../config'\r\n\r\nclass SalesReportWindow extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtistID: \"\",\r\n            totalSales: 0.0,\r\n        }\r\n    \r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.updateTotalSales = this.updateTotalSales.bind(this)\r\n    }\r\n        /*  converts objects to csv */\r\n    convertToCSV = function (objArray) {\r\n    var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    var str = '';\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var line = '';\r\n        for (var index in array[i]) {\r\n            if (line != '') line += ','\r\n\r\n            line += array[i][index];\r\n        }\r\n\r\n        str += line + '\\r\\n';\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\n    /*  exports sales report to CSV file */\r\n    exportCSVFile = function () {\r\n\r\n    if(this.state.currentArtistID != \"\")\r\n    {\r\n        for(let i=0; i < this.state.artists.length; i++)\r\n    {\r\n         if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n         {\r\n                var items = this.state.artists[i].items;\r\n                var fileTitle = this.state.artists[i].artistName;\r\n         }\r\n    }\r\n\r\n    // Convert Object to JSON\r\n    var jsonObject = JSON.stringify(items);\r\n\r\n    var csv = this.convertToCSV(jsonObject);\r\n\r\n    var exportedFilenmae = fileTitle + '.csv' || 'export.csv';\r\n\r\n    var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n        navigator.msSaveBlob(blob, exportedFilenmae);\r\n    } else {\r\n        var link = document.createElement(\"a\");\r\n        if (link.download !== undefined) { // feature detection\r\n            // Browsers that support HTML5 download attribute\r\n            var url = URL.createObjectURL(blob);\r\n            link.setAttribute(\"href\", url);\r\n            link.setAttribute(\"download\", exportedFilenmae);\r\n            link.style.visibility = 'hidden';\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n    }\r\n\r\n}\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({currentArtistID: event.target.value}, \r\n            () => {this.updateTotalSales()});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n    }\r\n\r\n    updateTotalSales(){\r\n        var total = 0.0;\r\n        for(let i=0; i < this.state.artists.length; i++)\r\n        {\r\n            if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n            {\r\n                for(let j = 0; j< this.state.artists[i].items.length; j++){\r\n                    total += this.state.artists[i].items[j].itemPrice\r\n                } \r\n                    \r\n                for(let j = 0; j< this.state.artists[i].bundles.length; j++) {\r\n                    total += this.state.artists[i].bundles[j].bundlePrice\r\n                } \r\n            } \r\n        }\r\n\r\n        this.setState({totalSales:total})\r\n    }\r\n\r\n    render(){\r\n    var itemList = [];\r\n    var bundleList = [];\r\n\r\n    for(let i=0; i < this.state.artists.length; i++)\r\n    {\r\n        if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n        {\r\n            if(this.state.artists[i].items)\r\n            {\r\n                itemList = this.state.artists[i].items.filter(function(item){\r\n                    if (typeof item === 'undefined' || item === false) {\r\n                    return false; // skip\r\n                    }\r\n                    return true;\r\n                }).map(item => {\r\n                    if(item._id == this.state.currentItem){\r\n                        return (<LoadItemCards  key={item._id}\r\n                        _id={item._id}\r\n                        itemName={item.itemName} \r\n                        stocksQuantity={item.stockQuantity}\r\n                        itemPrice={item.itemPrice}\r\n                        itemPicture={item.itemPicture}\r\n                        itemsSold={item.itemsSold}\r\n                        handleFinancialItem={this.handleFinancialItem}\r\n                        itemType=\"item\"\r\n                        class=\"col mb-3 bg-secondary\"/>)\r\n                    }\r\n                    else{\r\n                        return(<LoadItemCards  key={item._id}\r\n                            _id={item._id}\r\n                            itemName={item.itemName} \r\n                            stocksQuantity={item.stockQuantity}\r\n                            itemPrice={item.itemPrice}\r\n                            itemPicture={item.itemPicture}\r\n                            itemsSold={item.itemsSold}\r\n                            handleFinancialItem={this.handleFinancialItem}\r\n                            itemType=\"item\"\r\n                            class=\"col mb-3\"/>)\r\n                    }\r\n                })  \r\n            }\r\n            \r\n            if(this.state.artists[i].bundles)\r\n            {\r\n                bundleList = this.state.artists[i].bundles.filter(function(bundle){\r\n                    if (typeof bundle === 'undefined' || bundle === false) {\r\n                    return false; // skip\r\n                    }\r\n                    return true;\r\n                }).map(bundle=> {\r\n                    if(bundle._id == this.state.currentItem){\r\n                       return (<LoadItemCards  key={bundle._id}\r\n                        _id={bundle._id}\r\n                        itemName={bundle.bundleName} \r\n                        stocksQuantity={bundle.bundleStock}\r\n                        itemPrice={bundle.bundlePrice}\r\n                        itemsSold={bundle.bundleSold}\r\n                        itemPicture={bundle.bundlePicture}\r\n                        handleFinancialItem={this.handleFinancialItem}\r\n                        itemType=\"bundle\"\r\n                        class=\"col mb-3 bg-secondary\"/>)\r\n                    }\r\n                    else{\r\n                        return (<LoadItemCards  key={bundle._id}\r\n                            _id={bundle._id}\r\n                            itemName={bundle.bundleName} \r\n                            stocksQuantity={bundle.bundleStock}\r\n                            itemPrice={bundle.bundlePrice}\r\n                            itemsSold={bundle.bundleSold}\r\n                            itemPicture={bundle.bundlePicture}\r\n                            handleFinancialItem={this.handleFinancialItem}\r\n                            itemType=\"bundle\"\r\n                            class=\"col mb-3\"/>)\r\n                    }\r\n                })\r\n                 \r\n            }\r\n        }\r\n    }\r\n\r\n    const artistOptions = this.state.artists.map(artist =>\r\n        <LoadNames key={artist.artistID} artistID={artist.artistID} artistName={artist.artistName} />\r\n    )\r\n\r\n        return (\r\n            <Modal onHide={this.props.handleClose} show={this.props.show} size=\"lg\" id=\"salesReportWindow\">\r\n                <Form>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title className=\"modal-title\">Current sales report</Modal.Title>\r\n                    </Modal.Header>\r\n    \r\n                    <Card.Header className=\"bg-secondary row mx-0 d-flex justify-content-around\">\r\n                        <select id=\"artistSalesListDropdown\" className=\"form-control salesReportArtist col-md-7 col-sm-12 my-1\" name=\"selectedArtistSales\" value={this.state.currentArtistID} onChange={this.handleChange}>\r\n                            <option value=\"\" className=\"defaultVal\" disabled selected>select artist</option>\r\n                            {artistOptions}\r\n                        </select>\r\n                        <select id=\"sortItemsDropdown\" className=\"form-control salesReportSort d-md-inline-block col-md-4 col-sm-12 my-1\" name=\"selectedArtistSales\">\r\n                            <option value=\"name\" className=\"defaultVal\" selected>sort by name</option>\r\n                            <option value=\"price asc\">sort by price (ascending)</option>\r\n                            <option value=\"price desc\">sort by price (descending)</option>\r\n                            <option value=\"sold asc\">sort by quantity sold (ascending)</option>\r\n                            <option value=\"sold desc\">sort by quantity sold (descending)</option>\r\n                        </select>\r\n                    </Card.Header>\r\n    \r\n                    <Modal.Body>\r\n                        <table id=\"soldItemsTable\" className=\"table table-bordered\">\r\n                            <thead className=\"thead bg-secondary text-light\">\r\n                                <tr className=\"row m-0\">\r\n                                    <th className=\"col-6\">Item/Bundle</th>\r\n                                    <th className=\"col-3\">Price</th>\r\n                                    <th className=\"col-3\">Quantity sold</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"salesList\">                        \r\n                                {bundleList}\r\n                                {itemList}\r\n                            </tbody>\r\n                        </table>\r\n                        <table id=\"totalSalesTable\" className=\"table\">\r\n                            <tr className=\"row m-0\">\r\n                                <td className=\"font-weight-bold col-9\">Total</td>\r\n                                <td className=\"col-3\" id=\"totalSoldSales\">PHP {this.state.totalSales}</td>\r\n                            </tr>\r\n                            <tbody>\r\n                            </tbody>\r\n                        </table>\r\n                    </Modal.Body>\r\n    \r\n                    <Modal.Footer>\r\n                        <Button id=\"saveOrder\" className=\"btn btn-secondary btn-sm col-2\" value=\"export data\" onClick={()=>this.exportCSVFile()}>check out</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nfunction LoadItemCards(props) {\r\n    return (\r\n        <tr class='row m-0'>\r\n            <td className='col-6'> {props.itemName}</td>\r\n            <td className='col-3'> {props.itemPrice.toFixed(2)}</td>\r\n            <td className='col-3'> {props.itemsSold}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SalesReportWindow","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\AddArtistForm.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\AddEventsForm.js",["174"],"import React, {Component} from 'react';\r\nimport config from '../../../config';\r\n\r\n\r\nclass AddEventsForm extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            newEventName: '',\r\n            newEventStartDate: null,\r\n            newEventEndDate: null,\r\n            newEventIsCurrentEvent: 0,\r\n            reponseToPost: '',\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.determineBoolean = this.determineBoolean.bind(this)\r\n    }\r\n\r\n    determineBoolean(value) {\r\n        if(value === 'on')\r\n            this.setState({newEventIsCurrentEvent: 1})\r\n        else\r\n            this.setState({newEventIsCurrentEvent: 0})\r\n    }\r\n\r\n    \r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n       alert(this.state.newEventName + \"\\n\" + this.state.newEventStartDate + \"\\n\" + this.state.newEventEndDate + \"\\n\" + this.state.newEventIsCurrentEvent)\r\n        if (this.state.newEventName !== '' && this.state.newEventStartDate && this.state.newEventEndDate) {\r\n            alert('add event')\r\n            const response = await fetch('/admin/getEvent/?eventName='+this.state.newEventName + \"&projection=_id eventName\", {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n              });\r\n\r\n              const body = await response.text();\r\n              \r\n              this.setState({ responseToPost: body });\r\n              \r\n              if(this.state.responseToPost === \"false\"){\r\n                  this.addEvent();                \r\n              }\r\n              else {\r\n                    alert('Error adding Event','Event already exist. Please type in another event'); //change to SWEET ALERT\r\n                     e.preventDefault();\r\n              } \r\n        }\r\n      };\r\n\r\n    addEvent = async e => {\r\n        const addResponse = await fetch('/admin/addEvent', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                          'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({newEventName: this.state.newEventName, addStartEventDate: this.state.newEventStartDate, addEndEventDate: this.state.newEventEndDate, newEventIsCurrentEvent: this.state.newEventIsCurrentEvent}),\r\n                      });\r\n                      const body = await addResponse.text();\r\n        \r\n                      this.setState({ responseToPost: body });\r\n    \r\n                      if (this.state.responseToPost) {\r\n                        window.location = '/admin';\r\n                      }\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div div id=\"addEventsSection\" className=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"addEventsOption\">\r\n                <h5 className=\"modal-title\">Add event</h5>\r\n                <p id=\"manageReminder\">Fill in the form below before adding a new event.</p>\r\n                <form className=\"form\" method=\"POST\" action=\"/admin/addEvent\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row mb-2\">\r\n                        <div className=\"col mb-2\">\r\n                            <label htmlFor=\"newEventName\" className=\"font-weight-normal mr-2\">event name</label>\r\n                            <input name=\"newEventName\" id=\"newEventName\" className=\"form-control col-14 clearInput\" value={this.state.newEventName} onChange={this.handleChange} type=\"text\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group ml-1 mb-2\">\r\n                        <div className=\"col mb-2\">\r\n                            <input name=\"addSetCurrentEvent\" id=\"addSetCurrentEvent\" className=\"form-check-input clearInput\" onChange={(event) => this.determineBoolean(event.target.value)}  type=\"checkbox\" />\r\n                            <label htmlFor=\"addSetCurrentEvent\" className=\"form-check-label\">Set as current event</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row mb-2\">\r\n                        <div className=\"col mb-2\">\r\n                            <label htmlFor=\"addStartEventDate\" className=\"font-weight-normal mr-2\">start date</label>\r\n                            <input name=\"addStartEventDate\" id=\"addStartEventDate\" className=\"form-control clearInput\" onChange={(event) => this.setState({newEventStartDate: event.target.value})}   type=\"date\"  required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row mb-2\">\r\n                        <div className=\"col mb-2\">\r\n                            <label htmlFor=\"addEndEventDate\" className=\"font-weight-normal mr-2\">end date</label>\r\n                            <input name=\"addEndEventDate\" id=\"addEndEventDate\" className=\"form-control clearInput\" onChange={(event) => this.setState({newEventEndDate: event.target.value})}  type=\"date\" required />\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"hidden\" id='addCurrentEvent' name = 'addCurrentEvent' value='0'/>\r\n                    <button name=\"addEventButton\" id=\"addEventButton\" className=\"btn btn-secondary btn-md col-4 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                </form>\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default AddEventsForm","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\EditEventsForm.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\EditArtistForm.js",[],"C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\AddItemsForm.js",["175","176"],"import { format } from 'path';\r\nimport React, {Component} from 'react';\r\nimport config from '../../../config';\r\n\r\nclass AddItemsForm extends Component {\r\n  \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtist: '',\r\n            newItemName: '',\r\n            newItemPriceStock: '',\r\n            newItemtockQuantity: '',\r\n            src:\"photo/item-photo.png\",\r\n            reponseToPost: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.getArtist = this.getArtist.bind(this)\r\n        this.handlePhoto = this.handlePhoto.bind(this)\r\n        this.handleID = this.handleID.bind(this)\r\n        this.addItem = this.addItem.bind(this)\r\n        //this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    \r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleID(event){\r\n        this.setState({currentArtistID: event.target.value});\r\n    }\r\n       \r\n    handlePhoto(url){\r\n        this.setState({src:url})\r\n    }\r\n\r\n    addItem = async(e) => {\r\n        e.preventDefault()\r\n        \r\n        var formData = new FormData();\r\n        formData.append('addItemPhotoPickerInput', document.getElementById(\"addItemPhotoPickerInput\").files[0])\r\n        formData.append('artistID', this.state.currentArtistID)\r\n        formData.append('artistsListDropdownItemAdd', this.state.currentArtistID)\r\n        formData.append('newItemName', this.state.newItemName)\r\n        formData.append('newItemPriceStock', this.state.newItemPriceStock)\r\n        formData.append('newItemStockQuantity', this.state.newItemStockQuantity)\r\n\r\n        const response = await fetch(config.API_URI + '/admin/addItem', {\r\n           method: 'POST',\r\n           body: formData\r\n          });\r\n        \r\n        const body = await response.json().then(alert(\"success\"), window.location = '/admin')//error checking\r\n         \r\n        return body;\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getArtist()\r\n      .then(res => \r\n        this.setState({\r\n        artists: res.artist,\r\n      })); \r\n    }\r\n    \r\n\r\n    getArtist = async () => {\r\n        const response = await fetch(config.API_URI + '/admin/getHome', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n        const body = await response.json();\r\n        return body;\r\n      };\r\n\r\n      render(){\r\n\r\n        const artistOptions = this.state.artists.map(artist =>\r\n            <LoadNames key={artist.artistID} artistID={artist.artistID}\r\n                artistName={artist.artistName} />\r\n        )\r\n        \r\n          return(\r\n                <div id=\"addItemSection\" className=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"addItemOption\">\r\n                                 <h5 className=\"modal-title\">Add item</h5>\r\n                                 <p id=\"manageReminder\">Fill in the form below before adding a new item.</p>\r\n                                 <form id=\"artistSelectaddItem\" className=\"form\" method=\"POST\" action={config.API_URI + \"/admin/addItem\"} encType=\"multipart/form-data\">\r\n                                     <div id=\"otherInputSection\" className=\"mt-2\">\r\n                                         <div id=\"editSelectorsSection\" className=\"row\">\r\n                                             <div className=\"col\">\r\n                                                 <div className=\"form-group mb-2\">\r\n                                                 \r\n                                                     <select id=\"artistsListDropdownItemAdd\" className=\"form-control\" name=\"artistsListDropdownItemAdd\" value={this.state.currentArtistID} onChange={this.handleID} required>\r\n                                                         <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                                                         {artistOptions}\r\n                                                     </select>\r\n                                                 </div>\r\n                                             </div>\r\n                                         </div>\r\n                                         <div className=\"row selectedSection\">\r\n                                             <div id=\"textFields\" className=\"col\" style={{width: \"500px\"}}>\r\n                                                 <div className=\"form-group mb-2\">\r\n                                                     <label htmlFor=\"newItemName\" className=\"font-weight-normal mr-2\">item name</label>\r\n                                                     <input name=\"newItemName\" id=\"newItemName\" className=\"form-control col-11 clearInput\" type=\"text\" value={this.state.newItemName} onChange={this.handleChange} required />\r\n                                                 </div>\r\n                                                 <div className=\"form-group mb-2\">\r\n                                                     <label htmlFor=\"newItemPriceStock\" className=\"font-weight-normal mr-2\">price</label>\r\n                                                     <input name=\"newItemPriceStock\" id=\"newItemPriceStock\" className=\"form-control col-11 clearInput\" type=\"number\" value={this.state.newItemPriceStock} onChange={this.handleChange}  min=\"0\" max=\"99999999\" required />\r\n                                                 </div>\r\n                                                 <div className=\"form-group mb-2\">\r\n                                                     <label htmlFor=\"newItemStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                                                     <input name=\"newItemStockQuantity\" id=\"newItemStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" value={this.state.newItemStockQuantity} onChange={this.handleChange} min=\"0\" max=\"99999999\" required />\r\n                                                 </div>\r\n                                             </div>\r\n                                             <div className=\"col itemPhotoPicker\">\r\n                                                 <div className=\"d-flex justify-content-center\">\r\n                                                     <img name=\"newItemPhoto\" id=\"newItemPhoto\" className = \"photos\" src={this.state.src}/>\r\n                                                 </div>\r\n                                                 <div className=\"custom-file mt-2\">\r\n                                                     <input name=\"addItemPhotoPickerInput\" id=\"addItemPhotoPickerInput\" type=\"file\" className=\"custom-file-input clearInput\" onChange={()=>this.handlePhoto(window.URL.createObjectURL(document.getElementById(\"addItemPhotoPickerInput\").files[0]))} required />\r\n                                                     <label className=\"custom-file-label \" htmlFor=\"addItemPhotoPickerInput\">Choose photo</label>\r\n                                                 </div>\r\n                                             </div>\r\n                                         </div>\r\n                                         <div className=\"row mt-4\">\r\n                                             <div className=\"col\">\r\n                                                 <button name=\"addItemButton\" id=\"addItemButton\" className=\"btn btn-secondary btn-md col-6 mt-3 float-right\" type=\"submit\" onClick={this.addItem}>save</button>\r\n                                             </div>\r\n                                         </div>\r\n                                     </div>\r\n                                 </form>\r\n                             </div>\r\n          )\r\n      }\r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nexport default AddItemsForm\r\n      ","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\EditItemsForm.js",["177","178","179","180","181","182","183"],"import React, {Component} from 'react';\r\nimport config from '../../../config';\r\nimport Swal from 'sweetalert2'\r\n\r\nclass EditItemsForm extends Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtistID: '',\r\n            currentItems: [],\r\n            currentSelectedItem: '',\r\n            editItemName: '',\r\n            editPhoto: false,\r\n            editItemPriceStock: '',\r\n            editItemtockQuantity: '',\r\n            src:\"photo/item-photo.png\",\r\n            reponseToPost: '',\r\n        }\r\n        this.getArtist = this.getArtist.bind(this)\r\n        this.getItems = this.getItems.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleID = this.handleID.bind(this)\r\n        this.handleItemID = this.handleItemID.bind(this)\r\n        this.handlePhoto = this.handlePhoto.bind(this)\r\n        this.deleteItem = this.deleteItem.bind(this)\r\n        this.deleteAPI = this.deleteAPI.bind(this)\r\n    }    \r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleID(event){\r\n        this.setState({currentArtistID: event.target.value});\r\n    }   \r\n    \r\n    handleItemID(event){\r\n        this.setState({currentSelectedItem: event.target.value, editPhoto: false });\r\n    }   \r\n\r\n    handlePhoto(url){\r\n        this.setState({src:url, editPhoto:true})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getArtist()\r\n        .then(res => \r\n          this.setState({\r\n          artists: res.artist,\r\n        })); \r\n      }\r\n\r\n      componentDidUpdate(){\r\n            this.getItems()\r\n      }\r\n      \r\n      getArtist = async () => {\r\n          const response = await fetch(config.API_URI + '/admin/getHome', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            }\r\n          });\r\n          const body = await response.json();\r\n          return body;\r\n        };\r\n\r\n        getItems = async () => {\r\n            for(let i=0; i < this.state.artists.length; i++)\r\n            {\r\n                const itemsResponse = await fetch(config.API_URI + '/getItems/?artistID='+this.state.artists[i].artistID + \"&projection=itemName itemPrice itemsSold stockQuantity itemPicture\", {\r\n                    method: 'GET',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                  });\r\n                  const itemsBody = await itemsResponse.json();\r\n                  this.state.artists[i].items = itemsBody;\r\n            }\r\n          }\r\n\r\n          deleteItem(e) {\r\n            var selected = this.state.currentSelectedItem;\r\n            if (selected != '') {\r\n                Swal.fire({\r\n                    title: 'Are you sure?',\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    confirmButtonText: 'Yes, delete it!'\r\n                  }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        //ADD DELETE CODE\r\n                        this.deleteAPI();\r\n                    }\r\n                  })\r\n                }\r\n            else {\r\n                Swal.fire('Error deleting item','Please select an artist');\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        deleteAPI = async () => {\r\n            const response = await fetch(config.API_URI + '/admin/deleteItem', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({itemID: this.state.currentSelectedItem})\r\n            });\r\n            const body = await response.text();\r\n            if (body) { \r\n                Swal.fire(\r\n                'Deleted!',\r\n                'Item has been deleted.',\r\n                'success'\r\n              )\r\n                window.location = '/admin';\r\n                return true;\r\n\r\n            }\r\n          };\r\n\r\n    render(){\r\n\r\n        const artistOptions = this.state.artists.map(artist =>\r\n            <LoadNames key={artist.artistID} artistID={artist.artistID}\r\n                artistName={artist.artistName} />\r\n        )\r\n\r\n        //get items\r\n        for(let i = 0; i<this.state.artists.length; i++){\r\n            if(this.state.currentArtistID == this.state.artists[i].artistID){\r\n                this.state.currentItems = this.state.artists[i].items;\r\n            }\r\n        }\r\n\r\n        var itemOptions = []\r\n        if(this.state.currentArtistID != ''){\r\n            itemOptions = this.state.currentItems.filter(function(item){\r\n                if (typeof item === 'undefined' || item === false) {\r\n                return false; // skip\r\n                }\r\n                return true;\r\n            }).map(current =>\r\n                <LoadNames key={current._id} artistID={current._id}\r\n                    artistName={current.itemName} />\r\n            )\r\n\r\n            for(let i = 0; i<this.state.currentItems.length; i++){\r\n                if(this.state.currentSelectedItem == this.state.currentItems[i]._id){\r\n                    if(!this.state.editPhoto)\r\n                        this.state.src = this.state.currentItems[i].itemPicture;\r\n                }\r\n            }\r\n        }\r\n    \r\n        return(\r\n            <div id=\"editItemSection\" className=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"editItemOption\">\r\n            <h5 className=\"modal-title\">Edit item</h5>\r\n            <p id=\"manageReminder\">Select the artist and their item you want to edit or delete.</p>\r\n\r\n            <form id=\"artistSelectEdit\" className=\"form\" method=\"POST\" action=\"/admin/editItem\" encType=\"multipart/form-data\">\r\n                <div id=\"otherInputSection\" className=\"mt-2\">\r\n                    <div id=\"editSelectorsSection\" className=\"row mb-2\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group\">\r\n                                <select id=\"artistsListDropdownItemEdit\" className=\"form-control col-11 manageItemsArtist\" name=\"artistsListDropdownItemEdit\" value={this.state.currentArtistID} onChange={this.handleID} required>\r\n                                    <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                                    {artistOptions}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col ml-2\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col\">\r\n                                    <select id=\"artistsListDropdownItem\" className=\"form-control manageItemsList\" name=\"artistsListDropdownItem\" value={this.state.currentSelectedItem} onChange={this.handleItemID} required>\r\n                                        <option className=\"defaultVal\" value=\"\" disabled defaultValue>select item of artist</option>\r\n                                        {itemOptions}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <button name=\"deleteItemButton\" id=\"deleteItemButton\" className=\"btn btn-secondary \" type=\"button\" onClick={(event) => this.deleteItem(event)}><i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div id=\"\" className=\"row selectedSection\">\r\n                        <div id=\"editItemsSection\" className=\"col mt-2\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <label htmlFor=\"editItemName\" className=\"font-weight-normal mr-2\">item name</label>\r\n                                <input name=\"editItemName\" id=\"editItemName\" className=\"form-control col-11 clearInput\" type=\"text\" value={this.state.editItemName} onChange={this.handleChange} required />\r\n                            </div>\r\n                            <div className=\"form-group mb-2\">\r\n                                <label htmlFor=\"editItemStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                                <input name=\"editItemStockQuantity\" id=\"editItemStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" value={this.state.editItemStockQuantity} onChange={this.handleChange} min=\"0\" max=\"99999999\" required />\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div id=\"\" className=\"col itemPhotoPicker\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <img name=\"editItemPhoto\" id=\"editItemPhoto\" className=\"photos\" src={this.state.src} />\r\n                                </div>\r\n                                <div className=\"custom-file mt-2\">\r\n                                    <input name=\"editItemPhotoPickerInput\" id=\"editItemPhotoPickerInput\" type=\"file\" className=\"custom-file-input clearInput\"  onChange={()=>this.handlePhoto(window.URL.createObjectURL(document.getElementById(\"editItemPhotoPickerInput\").files[0]))} />\r\n                                    <label className=\"custom-file-label \" htmlFor=\"editItemPhotoPickerInput\">Choose photo</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col\">\r\n                            <button name=\"editItemButton\" id=\"editItemButton\" className=\"btn btn-secondary btn-md col-6 mt-3 float-right\" type=\"submit\">save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nexport default EditItemsForm\r\n  ","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\EditBundlesForm.js",["184","185"],"import React, {Component} from 'react';\r\nimport config from '../../../config';\r\n\r\nclass EditBundlesForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            bundles:[],\r\n            currentBundleID: '',\r\n            currentArtistID: '',\r\n            editBundleName: '',\r\n            editBundleStockQuantity: '',\r\n            editBundlePicture:\"photo/item-photo.png\",\r\n            editBundleItems: [],\r\n            reponseToPost: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handlePhoto = this.handlePhoto.bind(this)\r\n        this.getArtist = this.getArtist.bind(this)\r\n        this.handleChangeBundle = this.handleChangeBundle.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleChangeBundle(event){\r\n        this.setState({currentBundleID: event.target.value});\r\n    }\r\n\r\n    handlePhoto(url){\r\n        this.setState({editBundlePicture:url})\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getArtist()\r\n      .then(res => \r\n        this.setState({\r\n        artists: res.artist,\r\n      })); \r\n    }\r\n\r\n    getArtist = async () => {\r\n        const response = await fetch(config.API_URI + '/admin/getHome', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n        const body = await response.json();\r\n        return body;\r\n      };\r\n\r\n      render(){\r\n        const artistOptions = this.state.artists.map(artist =>\r\n            <LoadNames key={artist.artistID} artistID={artist.artistID}\r\n                artistName={artist.artistName} />\r\n        )\r\n\r\n\r\n        return(\r\n            <div id=\"editBundlesSection\" className=\"tab-pane fade show active pb-4\" role=\"tabpanel\" aria-labelledby=\"editBundleOption\">\r\n                <h5 className=\"modal-title\">Edit bundle</h5>\r\n                <p id=\"manageReminder\">Select the artist and their bundle you want to edit or delete.</p>\r\n\r\n                <form id=\"editArtistSelectBundle\" className=\"form\" method='POST' action=\"/admin/editBundle\" encType=\"multipart/form-data\">\r\n                    <div id=\"otherInputSection\" className=\"mt-3\">\r\n                        <div id=\"editSelectorsSection\" className=\"row mb-2\">\r\n                            <div className=\"col\">\r\n                                <div className=\"form-group\">\r\n                                    <select id=\"artistsListDropdownBundleEdit\" className=\"form-control col-11\" name=\"artistsListDropdownBundleEdit\" value={this.state.currentArtistID}  required>\r\n                                        <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                                        \r\n                                        {artistOptions}\r\n                                        \r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col ml-2\">\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col\">\r\n                                        <select id=\"artistsListDropdownBundle\" className=\"form-control\" name=\"artistsListDropdownBundle\" onChange={this.handleChangeBundle}required>\r\n                                            <option className=\"defaultVal\" value=\"\" disabled defaultValue>select bundle</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <button name=\"deleteBundleButton\" id=\"deleteBundleButton\" className=\"btn btn-secondary \" type=\"button\" /*onClick=\"deleteBundle(event);\"*/><i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row selectedSection\">\r\n                            <div id=\"textFields\" className=\"col\" style={{width: \"500px\"}}>\r\n                                <div className=\"form-group mb-2\">\r\n                                    <label htmlFor=\"editBundleName\" className=\"font-weight-normal mr-2\">bundle name</label>\r\n                                    <input name=\"editBundleName\" id=\"editBundleName\" className=\"form-control col-11 clearInput\" type=\"text\" required />\r\n                                </div>\r\n                                <div className=\"form-group mb-2\">\r\n                                    <label htmlFor=\"editBundleStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                                    <input name=\"editBundleStockQuantity\" id=\"editBundleStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" min=\"0\" max=\"99999999\" required />\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"BundlePhotoPicker1\" className=\"col mt-2\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <img name=\"editBundlePhoto\" id=\"editBundlePhoto\" className=\"photos\" src=\"photo/item-photo.png\" />\r\n                                </div>\r\n                                <div className=\"custom-file mt-2\">\r\n                                    <input name=\"editBundlePhotoPicker\" id=\"editBundlePhotoPicker\" type=\"file\" className=\"custom-file-input clearInput\" /*onChange=\"document.getElementById('editBundlePhoto').src = window.URL.createObjectURL(this.files[0])\"*/ />\r\n                                    <label className=\"custom-file-label \" htmlFor=\"editBundlePhotoPicker\">Choose photo</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"hidden\" id=\"editSelectedItems\" name=\"editSelectedItems\" value=\"\" />\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div id=\"editBundleItemsSection\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"editBundleItemsList\" className=\"font-weight-normal\">select bundle items</label>\r\n                                        <div id=\"editBundleItemsList\" className=\"card overflow-auto\" style={{height: \"10rem\"}} data-spy=\"scroll\" data-offset=\"0\">\r\n                                            <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-3 row-cols-lg-4 itemGrid\" id=\"editSelectBundleItems\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <button name=\"addBundleButton\" id=\"editBundleButton\" className=\"btn btn-secondary btn-md col-6 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n      }\r\n}\r\n\r\n\r\nfunction LoadBundlenames(props) {\r\n\r\n}\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nexport default EditBundlesForm","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\AddBundlesForm.js",["186","187","188","189","190","191","192","193","194","195"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport config from '../../../config';\r\n\r\nclass AddBundlesForm extends Component {\r\n  \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            artists:[],\r\n            currentArtistID: '',\r\n            eventID: '',\r\n            includedItems: [],\r\n            newBundleName: '',\r\n            newBundlePriceStock: 0.0,\r\n            newBundleSold: 0,\r\n            newBundleStockQuantity: 0,\r\n            newBundlePicture: 'photo/item-photo.png',\r\n            reponseToPost: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChangeArtist = this.handleChangeArtist.bind(this)\r\n        this.handlePhoto = this.handlePhoto.bind(this)\r\n        this.getArtist = this.getArtist.bind(this)\r\n        this.getItems = this.getItems.bind(this)\r\n        this.handleItem = this.handleItem.bind(this)\r\n        this.addToBundle = this.addToBundle.bind(this)\r\n    }\r\n\r\n    handleItem(/*itemID, itemType*/) {\r\n        console.log('hi')\r\n        /*\r\n        if (itemID !== this.state.currentItem) {         \r\n            this.setState({currentItem: itemID,\r\n                            currentType: itemType})\r\n        } */\r\n    }\r\n    \r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleChangeArtist(event) {\r\n        this.setState({currentArtistID: event.target.value});\r\n    }\r\n    handlePhoto(url){\r\n        this.setState({newBundlePicture:url})\r\n    }\r\n\r\n\r\n    addToBundle(props){\r\n        var items = this.state.includedItems\r\n        var goOut = false\r\n        for(let i=0; i < items.length; i++){\r\n            if(props._id == items[i]._id)\r\n                goOut = true\r\n        }\r\n        if(!goOut){\r\n            var item = {_id: props._id,\r\n            itemName: props.itemName,\r\n            stockQuantity: props.stocksQuantity,\r\n            itemPrice: props.itemPrice,\r\n            itemPicture: props.itemPicture,\r\n            artistID: this.state.currentArtistID,\r\n            eventID: this.state.eventID,\r\n            itemSold: 0,\r\n            }\r\n            items.push(item)\r\n            this.setState({includedItems: items})\r\n\r\n        }\r\n        \r\n    }\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n       /*\r\n        if (this.state.newBundleName !== '' && this.state.newBundlePriceStock && this.state.newBundlePicture !== '') {\r\n            alert('add event')\r\n            const response = await fetch('/admin/getBundle/?bundleName='+this.state.newBundleName+ \"&projection=_id newBundleName\", {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n              });\r\n\r\n              const body = await response.text();\r\n              \r\n              this.setState({ responseToPost: body });\r\n              \r\n              if(this.state.responseToPost === \"false\"){\r\n                  this.addBundle();                \r\n              }\r\n              else {\r\n                    alert('Error adding Bundle','Bundle already exist. Please type in another bundle'); //change to SWEET ALERT\r\n                     e.preventDefault();\r\n              } \r\n        }\r\n        */\r\n    };\r\n\r\n    addBundle = async e => {\r\n        const addResponse = await fetch('/admin/addBundle', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                          'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({artistID: this.state.currentArtistID, eventID: this.state.eventID, includedItems: this.state.includedItems, bundleName: this.state.newBundleName, bundlePrice: this.state.newBundlePriceStock, bundleSold: this.state.newBundleSold, bundleStock: this.state.newBundleStockQuantity, bundlePicture: this.state.newBundlePicture}),\r\n                      });\r\n                      const body = await addResponse.text();\r\n        \r\n                      this.setState({ responseToPost: body });\r\n    \r\n                      if (this.state.responseToPost) {\r\n                        window.location = '/admin';\r\n                      }\r\n      }\r\n\r\n    componentDidMount() {\r\n      this.getArtist()\r\n      .then(res => \r\n        this.setState({\r\n        artists: res.artist,\r\n      })); \r\n    }\r\n    componentDidUpdate(){\r\n        this.getItems()\r\n    }\r\n\r\n    getArtist = async () => {\r\n        const response = await fetch(config.API_URI + '/admin/getHome', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n        const body = await response.json();\r\n        return body;\r\n      };\r\n\r\n      getItems = async () => {\r\n        for(let i=0; i < this.state.artists.length; i++)\r\n        {\r\n            const itemsResponse = await fetch(config.API_URI + '/getItems/?artistID='+this.state.artists[i].artistID + \"&projection=itemName itemPrice itemsSold stockQuantity itemPicture\", {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n              });\r\n              const itemsBody = await itemsResponse.json();\r\n              this.state.artists[i].items = itemsBody;\r\n        }\r\n      }\r\n    \r\n  render(){\r\n\r\n    const artistOptions = this.state.artists.map(artist =>\r\n        <LoadNames key={artist.artistID} artistID={artist.artistID}\r\n            artistName={artist.artistName} />\r\n    )\r\n\r\n    var itemList = [];\r\n    \r\n        \r\n    for(let i=0; i < this.state.artists.length; i++)\r\n        {\r\n            \r\n                if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n                {\r\n                    /*\r\n                    console.log(\"items:\")\r\n                    console.log(this.state.artists[i].items) */\r\n                    if(this.state.artists[i].items)\r\n                    {\r\n                        itemList = this.state.artists[i].items.filter(function(item){\r\n                            if (typeof item === 'undefined' || item === false) {\r\n                            return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(item => <LoadItemCards key={item._id}\r\n                            _id={item._id}\r\n                            itemName={item.itemName}\r\n                            stocksQuantity={item.stockQuantity}\r\n                            itemPrice={item.itemPrice}\r\n                            itemPicture={item.itemPicture}\r\n                            purchases={this.state.purchases}\r\n                            currentQty={this.state.currentQty}\r\n                            totalPrice={this.state.totalPrice}\r\n                            addToBundle = {this.addToBundle}\r\n                            />)\r\n                    }\r\n                }\r\n        }\r\n    \r\n\r\n    \r\n        console.log(this.state.includedItems)\r\n    return (\r\n        <div id=\"addBundlesSection\" className=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"addBundleOption\">\r\n        <form id=\"addArtistSelectBundle\" className=\"form\" method='POST' action=\"/admin/addBundle\" encType=\"multipart/form-data\">\r\n            <h5 className=\"modal-title\">Add bundle</h5>\r\n            <p id=\"manageReminder\">Fill in the form below before adding a new bundle.</p>\r\n            <div id=\"otherInputSection\" className=\"mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col mt-2\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <select id=\"artistsListDropdownBundleAdd\" className=\"form-control\" name=\"artistsListDropdownBundleAdd\" value={this.state.currentArtistID} onChange={this.handleChangeArtist} required>\r\n                                <option className=\"defaultVal\" disabled defaultValue >select artist</option>\r\n                               {artistOptions}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row selectedSection\">\r\n                    <div id=\"textFields\" className=\"col\" style={{width: \"500px\"}}>\r\n                        <div className=\"form-group mb-2\">\r\n                            <label htmlFor=\"newBundleName\" className=\"font-weight-normal mr-2\">bundle name</label>\r\n                            <input name=\"newBundleName\" id=\"newBundleName\" className=\"form-control col-11 clearInput\" value={this.state.newBundleName} onChange={this.handleChange} type=\"text\" required  />\r\n                        </div>\r\n                        <div className=\"form-group mb-2\">\r\n                            <label htmlFor=\"newBundlePriceStock\" className=\"font-weight-normal mr-2\">price</label>\r\n                            <input name=\"newBundlePriceStock\" id=\"newBundlePriceStock\" className=\"form-control col-11 clearInput\" type=\"number\"  value={this.state.newBundlePriceStock} onChange={this.handleChange} min=\"0\" max=\"99999999\" required />\r\n                        </div>\r\n                        <div className=\"form-group mb-2\">\r\n                            <label htmlFor=\"newBundleStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                            <input name=\"newBundleStockQuantity\" id=\"newBundleStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" value={this.state.newBundleStockQuantity} onChange={this.handleChange} min=\"0\" max=\"99999999\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"BundlePhotoPicker2\" className=\"col m-4\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <img name=\"newBundlePhoto\" id=\"newBundlePhoto\" className = \"photos\" src={this.state.newBundlePicture} />\r\n                        </div>\r\n                        <div className=\"custom-file mt-2\">\r\n                            <input name=\"addBundlePhotoPicker\" id=\"addBundlePhotoPicker\" type=\"file\" className=\"custom-file-input clearInput\"onChange={()=>this.handlePhoto(window.URL.createObjectURL(document.getElementById(\"addBundlePhotoPicker\").files[0]))} required />\r\n                            <label className=\"custom-file-label \" htmlFor=\"addBundlePhotoPicker\">Choose photo</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <input type=\"hidden\" id=\"addSelectedItems\" name=\"addSelectedItems\" value=\"\" />\r\n                        <div id=\"addBundleItemsSection\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"addBundleItemsSection\" className=\"font-weight-normal\">select bundle items</label>\r\n                                <div id=\"addBundleItemsSection\" className=\"card overflow-auto\" style={{height: \"10rem\"}} data-spy=\"scroll\" data-offset=\"0\">\r\n                                    <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-3 row-cols-lg-4 itemGrid\" id=\"addSelectBundleItems\">\r\n                                        \r\n                                        {itemList}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button name=\"addBundleButton\" id=\"addBundleButton\" className=\"btn btn-secondary btn-md col-6 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nfunction LoadItemCards(props) {\r\n    return (\r\n        <div className={props.class} id={props._id + \"-financialItem\"} style={{padding: \"5px\"}}>\r\n            <div className=\"card\">\r\n                <img src={props.itemPicture} className=\"card-img-top\" alt=\"...\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\"> {props.itemName} </h5>\r\n                    <p className=\"card-text\">PHP {props.itemPrice.toFixed(2)}</p>\r\n                    <p className=\"card-text\">{props.stocksQuantity} left</p>\r\n                    <a href=\"#\" className=\"stretched-link\" onClick={()=> props.addToBundle(props)}style={{size: \"0px\"}}></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n/* onClick={()=> props.handleItem(props._id, props.itemType)}  */\r\n\r\nexport default AddBundlesForm","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\FinancialWindow.js",["196","197","198","199","200","201","202","203"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport config from \"../../config\";\r\n\r\nclass FinancialWindow extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtistID: \"\",\r\n            Amount: \"\",\r\n            currentItem: \"\",\r\n            currentType: \"\",\r\n        }\r\n    \r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleAmountChange = this.handleAmountChange.bind(this)\r\n        this.handleFinancialItem = this.handleFinancialItem.bind(this)\r\n        this.addStocks = this.addStocks.bind(this)\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({currentArtistID: event.target.value});\r\n      }\r\n\r\n      handleAmountChange(event) {\r\n        this.setState({Amount: event.target.value});\r\n      }\r\n    \r\n      componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n    }\r\n\r\n    handleFinancialItem(itemID, itemType) {\r\n        if (itemID !== this.state.currentItem) {         \r\n            this.setState({currentItem: itemID,\r\n                            currentType: itemType})\r\n        }\r\n    }\r\n\r\n    addStocks = async e => {\r\n        if (this.state.Amount > 0 && this.state.currentItem != \"\") {\r\n            var details = {\r\n                item: this.state.currentItem,\r\n                itemType: this.state.currentType,\r\n                value: this.state.Amount\r\n            }\r\n\r\n            const response = await fetch(config.API_URI + \"/restockItem\", {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(details)\r\n              });\r\n\r\n              \r\n              this.props.handleClose();\r\n              alert(\"Success\");\r\n        } else if (this.state.currentItem == \"\") {\r\n            alert('Error adding stocks Please select an artist and their item to restock.');\r\n        } else {\r\n            alert('Error adding stocks Please input a valid number of stocks to add.');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var itemList = [];\r\n        var bundleList = [];\r\n    \r\n        for(let i=0; i < this.state.artists.length; i++)\r\n        {\r\n                if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n                {\r\n                    if(this.state.artists[i].items)\r\n                    {\r\n                        itemList = this.state.artists[i].items.filter(function(item){\r\n                            if (typeof item === 'undefined' || item === false) {\r\n                            return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(item => {\r\n                            if(item._id == this.state.currentItem){\r\n                                return (<LoadItemCards  key={item._id}\r\n                                _id={item._id}\r\n                                itemName={item.itemName} \r\n                                stocksQuantity={item.stockQuantity}\r\n                                itemPrice={item.itemPrice}\r\n                                itemPicture={item.itemPicture}\r\n                                handleFinancialItem={this.handleFinancialItem}\r\n                                itemType=\"item\"\r\n                                class=\"col mb-3 bg-secondary\"/>)\r\n                            }\r\n                            else{\r\n                                return(<LoadItemCards  key={item._id}\r\n                                    _id={item._id}\r\n                                    itemName={item.itemName} \r\n                                    stocksQuantity={item.stockQuantity}\r\n                                    itemPrice={item.itemPrice}\r\n                                    itemPicture={item.itemPicture}\r\n                                    handleFinancialItem={this.handleFinancialItem}\r\n                                    itemType=\"item\"\r\n                                    class=\"col mb-3\"/>)\r\n                            }\r\n                        })  \r\n                    }\r\n                    \r\n                    if(this.state.artists[i].bundles)\r\n                    {\r\n                        bundleList = this.state.artists[i].bundles.filter(function(bundle){\r\n                            if (typeof bundle === 'undefined' || bundle === false) {\r\n                            return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(bundle=> {\r\n                            if(bundle._id == this.state.currentItem){\r\n                               return (<LoadItemCards  key={bundle._id}\r\n                                _id={bundle._id}\r\n                                itemName={bundle.bundleName} \r\n                                stocksQuantity={bundle.bundleStock}\r\n                                itemPrice={bundle.bundlePrice}\r\n                                itemPicture={bundle.bundlePicture}\r\n                                handleFinancialItem={this.handleFinancialItem}\r\n                                itemType=\"bundle\"\r\n                                class=\"col mb-3 bg-secondary\"/>)\r\n                            }\r\n                            else{\r\n                                return (<LoadItemCards  key={bundle._id}\r\n                                    _id={bundle._id}\r\n                                    itemName={bundle.bundleName} \r\n                                    stocksQuantity={bundle.bundleStock}\r\n                                    itemPrice={bundle.bundlePrice}\r\n                                    itemPicture={bundle.bundlePicture}\r\n                                    handleFinancialItem={this.handleFinancialItem}\r\n                                    itemType=\"bundle\"\r\n                                    class=\"col mb-3\"/>)\r\n                            }\r\n                        })\r\n                         \r\n                    }\r\n                }\r\n        }\r\n    \r\n        const artistOptions = this.state.artists.map(artist =>\r\n            <LoadNames artistID={artist.artistID}\r\n                artistName={artist.artistName} />\r\n        )\r\n        return (\r\n            <Modal onHide={this.props.handleClose} show={this.props.show} size=\"lg\" id=\"financialWindow\">\r\n                <Form>\r\n                    <Modal.Header className=\"bg-secondary\" closeButton>\r\n                        <div id=\"artistSelectSection\">\r\n                            <select id=\"artistsListDropdown\" class=\"form-control\" name=\"financeSelectedArtist\" onChange={this.handleChange} value={this.state.currentArtistID}>\r\n                                <option value=\"\" class=\"defaultVal\" disabled selected>select artist</option>\r\n                                {artistOptions}\r\n                            </select>\r\n                        </div>\r\n                        <Modal.Title className=\"modal-title\"></Modal.Title>\r\n                    </Modal.Header>\r\n    \r\n                    <Modal.Body>\r\n                        <div id=\"artistItemsSection\">\r\n                            <div id=\"otherInputSection\">\r\n                                <div id=\"itemList\">\r\n                                    <Form.Group>\r\n                                        <Form.Label for=\"financialItemList\" className=\"font-weight-normal\">select one item</Form.Label>\r\n                                        <Card id=\"financialItemList\" className=\"card overflow-auto\" style={{ height: \"20rem\" }} data-spy=\"scroll\" data-offset=\"0\">\r\n                                            <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-3 row-cols-lg-4 itemGrid\" id=\"financialItem\">\r\n                                            {bundleList}\r\n                                            {itemList}\r\n                                            </div>\r\n                                        </Card>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <div id=\"textFields\">\r\n                                    <Form.Group>\r\n                                        <Form.Label for=\"newPriceStock\" className=\"font-weight-normal\">quantity to add</Form.Label>\r\n                                        <Form.Control required id=\"newPriceStock\" className=\"form-control\" type=\"number\" min={1} step=\"1\" value={this.state.Amount} onChange={this.handleAmountChange} />\r\n                                    </Form.Group>\r\n                                </div>\r\n    \r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n    \r\n                    <Modal.Footer>\r\n                        <Button id=\"addStocks\" className=\"btn btn-secondary btn-sm col-2\" value=\"save\" onClick={this.addStocks}>save</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    \r\n   \r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nfunction LoadItemCards(props) {\r\n    return (\r\n        <div className={props.class} id={props._id + \"-financialItem\"} style={{padding: \"5px\"}}>\r\n            <div className=\"card\">\r\n                <img src={props.itemPicture} className=\"card-img-top\" alt=\"...\"/>\r\n                <div className=\"card-body\">\r\n                    <a href=\"#\" class=\"stretched-link\" onClick={()=>props.handleFinancialItem(props._id, props.itemType)} style={{size: \"0px\"}}>\r\n                        <h5 className=\"card-title\"> {props.itemName} </h5>\r\n                    </a>\r\n                    <p className=\"card-text\">PHP {props.itemPrice.toFixed(2)}</p>\r\n                    <p className=\"card-text\">{props.stocksQuantity} left</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinancialWindow","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\NewOrderWindow.js",["204","205","206","207","208","209","210","211","212","213"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport config from '../../config'\r\n\r\nclass NewOrderWindow extends Component{\r\n  \r\n  constructor(){\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            purchases: [],\r\n            currentQty: [],\r\n            totalPrice: 0,\r\n            totalPriceArray: [],\r\n            currentArtistID: \"\",\r\n        }\r\n\r\n      this.handleChange = this.handleChange.bind(this)\r\n\r\n      this.updateTotalPrice = this.updateTotalPrice.bind(this)\r\n      this.decreaseTotalPrice = this.decreaseTotalPrice.bind(this)\r\n      this.updateQty = this.updateQty.bind(this)\r\n      this.removeCartItem = this.removeCartItem.bind(this)\r\n  }\r\n\r\n    handleChange(event) {\r\n        this.setState({currentArtistID: event.target.value});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n    }\r\n\r\n    handleCloseModified() {\r\n        this.setState({ purchases: [], totalPriceArray: [] })\r\n        this.props.handleClose();\r\n    }\r\n\r\n    updateTotalPrice(curTotalPrice) {\r\n        var totalPrice = this.state.totalPrice;\r\n\r\n        totalPrice = totalPrice + curTotalPrice;\r\n        this.setState({totalPrice: totalPrice })\r\n    }\r\n\r\n    decreaseTotalPrice(itemPrice) {\r\n        var totalPrice = this.state.totalPrice;\r\n\r\n        totalPrice = totalPrice - itemPrice;\r\n\r\n        this.setState({ totalPrice: totalPrice })\r\n    }\r\n\r\n    updateQty(itemId, curQty) {\r\n        for (let i = 0; i < this.state.purchases.length; i++) {\r\n            if (itemId == this.state.purchases[i]._id) {\r\n                this.state.purchases[i].currentQty += curQty;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCartItem(itemId) {\r\n        var totalPrice = this.state.totalPrice;\r\n        for (let i = 0; i < this.state.purchases.length; i++) {\r\n            if (itemId == this.state.purchases[i]._id) {\r\n                console.log(\"Removed!\")\r\n                totalPrice = totalPrice - (this.state.purchases[i].itemPrice * this.state.purchases[i].currentQty)\r\n\r\n                this.state.purchases.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({ purchases: this.state.purchases, totalPrice: totalPrice })\r\n    }\r\n\r\n    render(){\r\n        var itemList = [];\r\n        var bundleList = [];\r\n\r\n        const LoadItemCards = (props) => {\r\n            const list = props.purchases\r\n\r\n            return (\r\n                <div class=\"col mb-3\" id={props._id + \"-buyItem\"} style={{ padding: \"5px\" }}>\r\n                    <Card>\r\n                        <img src={props.itemPicture} className=\"card-img-top\" alt=\"...\" />\r\n                        <Card.Body>\r\n                            <a href=\"#\" className=\"stretched-link\" onClick={() => {\r\n                                var itemIsInList = false;\r\n                                for (let i = 0; i < list.length; i++) {\r\n                                    if (list[i]._id == props._id) {\r\n                                        itemIsInList = true\r\n                                        list[i].updateQty(list[i]._id, 1)\r\n                                        list[i].updateTotalPrice(props.itemPrice)\r\n                                    }\r\n                                }\r\n\r\n                                if (itemIsInList != true) {\r\n                                    var newPurchase = { _id: props._id, itemName: props.itemName, itemPrice: props.itemPrice, currentQty: 1, updateTotalPrice: props.updateTotalPrice, decreaseTotalPrice: props.decreaseTotalPrice, updateQty: props.updateQty, removeCartItem: props.removeCartItem }\r\n\r\n                                    list.push(newPurchase)\r\n                                    props.updateTotalPrice(props.itemPrice)\r\n                                }\r\n\r\n;                            }}>\r\n\r\n                                <Card.Title> {props.itemName} </Card.Title>\r\n                            </a>\r\n                            <Card.Text>PHP {props.itemPrice.toFixed(2)}</Card.Text>\r\n                            <Card.Text>{props.stocksQuantity} left</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const AddedItem = (props) => {\r\n            const currentPrice = props.itemPrice\r\n            var currentQty = props.currentQty;\r\n\r\n            return (\r\n                <tr id={props._id + \"Cart\"} >\r\n                    <td>\r\n                        <Button className='close' onClick={() => { props.removeCartItem(props._id) }} variant=\"light\"><span>&times;</span></Button>\r\n                    </td>\r\n                    <td id={props._id + \"Quantity\"}>({currentQty}) {props.itemName} </td>\r\n                    <td id={props._id + \"Total\"} className='text-right'> {currentPrice.toFixed(2) * currentQty} </td>\r\n                    <td>\r\n                        <Button className='minusQuantity'\r\n                            onClick={() => {\r\n                                if (currentQty > 1) {\r\n                                    props.decreaseTotalPrice(props.itemPrice);\r\n                                    props.updateQty(props._id, -1)\r\n                                }\r\n                            }} variant=\"light\"><span className=\"font-weight-bold\">-</span>\r\n                        </Button>\r\n                    </td>\r\n\r\n                    <td>\r\n                        <Button className='plusQuantity'\r\n                            onClick={() => {\r\n                                props.updateTotalPrice(currentPrice);\r\n                                props.updateQty(props._id, 1)\r\n                            }} variant=\"light\"><span className=\"font-weight-bold\">+</span>\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        for(let i=0; i < this.state.artists.length; i++)\r\n        {\r\n                if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n                {\r\n                    if(this.state.artists[i].items)\r\n                    {\r\n                        itemList = this.state.artists[i].items.filter(function(item){\r\n                            if (typeof item === 'undefined' || item === false) {\r\n                            return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(item => <LoadItemCards key={item._id}\r\n                            _id={item._id}\r\n                            itemName={item.itemName}\r\n                            stocksQuantity={item.stockQuantity}\r\n                            itemPrice={item.itemPrice}\r\n                            itemPicture={item.itemPicture}\r\n                            purchases={this.state.purchases}\r\n                            currentQty={this.state.currentQty}\r\n                            updateTotalPrice={this.updateTotalPrice}\r\n                            decreaseTotalPrice={this.decreaseTotalPrice}\r\n                            updateQty={this.updateQty}\r\n                            removeCartItem={this.removeCartItem}\r\n                            />)  \r\n                    }\r\n                \r\n                    if(this.state.artists[i].bundles)\r\n                    {\r\n                        bundleList = this.state.artists[i].bundles.filter(function (bundle) {\r\n                            if (typeof bundle === 'undefined' || bundle === false) {\r\n                                return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(bundle => <LoadItemCards key={bundle._id}\r\n                            _id={bundle._id}\r\n                            itemName={bundle.bundleName}\r\n                            stocksQuantity={bundle.bundleStock}\r\n                            itemPrice={bundle.bundlePrice}\r\n                            itemPicture={bundle.bundlePicture}\r\n                            purchases={this.state.purchases}\r\n                            currentQty={this.state.currentQty}\r\n                            updateTotalPrice={this.updateTotalPrice}\r\n                            decreaseTotalPrice={this.decreaseTotalPrice}\r\n                            updateQty={this.updateQty}\r\n                            removeCartItem={this.removeCartItem}\r\n                            />)  \r\n                    }\r\n                }\r\n        }\r\n\r\n        const artistOptions = this.state.artists.map(artist =>\r\n            <LoadNames artistID={artist.artistID}\r\n                artistName={artist.artistName} />\r\n        )\r\n\r\n        var totalPrice = this.state.totalPrice;\r\n        /*for (var i = 0; i < this.state.totalPriceArray.length; i++) {\r\n            var currentPrice = this.state.totalPriceArray[i];\r\n            totalPrice = totalPrice + currentPrice;\r\n            console.log(totalPrice)\r\n        }*/\r\n\r\n        var purchaseRender = this.state.purchases.map(purchase =>\r\n            <AddedItem\r\n                _id={purchase._id}\r\n                itemName={purchase.itemName}\r\n                itemPrice={purchase.itemPrice}\r\n                currentQty={purchase.currentQty}\r\n                updateTotalPrice={purchase.updateTotalPrice}\r\n                updateQty={purchase.updateQty}\r\n                decreaseTotalPrice={purchase.decreaseTotalPrice}\r\n                removeCartItem={purchase.removeCartItem}\r\n            />\r\n            )\r\n\r\n        return (\r\n            <Modal onHide={this.handleCloseModified.bind(this)} show={this.props.show} size=\"xl\" id=\"newOrderWindow\">\r\n                <Form id=\"artistSelect\" className=\"form\" method='POST' action=\"/orderCheckOut\">\r\n                    <Modal.Header closeButton>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"modal-body d-flex flex-col\">\r\n                        <Card id=\"buySection\" className=\"card\" style={{ width: \"60rem\", height: \"30rem\" }}>\r\n                            <Card.Header id=\"buyArtistSection\" className=\"card-header bg-secondary\">\r\n                                <select id=\"artistsListDropdown\" className=\"form-control\" name=\"selectedArtist\" onChange={this.handleChange} value={this.state.currentArtistID}>\r\n                                    <option value=\"\" className=\"defaultVal\" disabled selected>select artist</option>\r\n                                        {artistOptions}\r\n                                </select>\r\n                            </Card.Header>\r\n                            <Card.Body id=\"buyItemSection\" className=\"card-body overflow-auto\">\r\n                                <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 itemGrid\" id=\"buyItem\">\r\n                                    {bundleList}\r\n                                    {itemList}\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card id=\"checkoutSection align-items-end\" className=\"card p-4\" style={{ width: \"30rem\", height: \"30rem\" }}>\r\n                            <Card.Title>items</Card.Title>\r\n                            <div style={{ 'overflow-y': \"auto\", 'overflow-x': \"hidden\" }}>\r\n                                <CheckoutTable>\r\n                                    {purchaseRender}\r\n                                </CheckoutTable>\r\n                            </div>\r\n                            <div className=\"mt-auto\">\r\n                                <table id=\"totalItems\" class=\"card-title table\">\r\n                                    <tr>\r\n                                        <th>total</th>\r\n                                        <th id=\"totalPrice\" className='text-right'>{this.state.totalPrice.toFixed(2)}</th>\r\n                                    </tr>\r\n                                </table>\r\n                                <Button className=\"btn btn-secondary col-sm-8\" id=\"checkoutBtn\" type=\"button\" value=\"check out\">check out</Button>\r\n                            </div>\r\n                        </Card>\r\n                    </Modal.Body>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nclass CheckoutTable extends Component {\r\n    render() {\r\n        return (\r\n            <table id=\"checkoutItemsList\" className=\"table table-borderless table-sm\" >\r\n                {this.props.children}\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewOrderWindow","C:\\Users\\james\\Documents\\STSWENG\\STSWENG-MLF2\\STSWENG-MLFInventorySystem\\frontend\\src\\ProtectedRoute.js",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":6,"column":3,"nodeType":"220","messageId":"221","endLine":6,"endColumn":11},{"ruleId":"218","severity":1,"message":"222","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":77,"column":21,"nodeType":"225","endLine":77,"endColumn":104},{"ruleId":"218","severity":1,"message":"226","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":17},{"ruleId":"218","severity":1,"message":"227","line":39,"column":15,"nodeType":"220","messageId":"221","endLine":39,"endColumn":19},{"ruleId":"228","severity":1,"message":"229","line":87,"column":29,"nodeType":"225","endLine":87,"endColumn":81},{"ruleId":"228","severity":1,"message":"229","line":93,"column":37,"nodeType":"225","endLine":93,"endColumn":92},{"ruleId":"218","severity":1,"message":"230","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":26},{"ruleId":"218","severity":1,"message":"231","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":15},{"ruleId":"218","severity":1,"message":"232","line":2,"column":17,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"233","severity":1,"message":"234","line":12,"column":5,"nodeType":"220","endLine":12,"endColumn":14,"suggestions":"235"},{"ruleId":"218","severity":1,"message":"230","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":26},{"ruleId":"218","severity":1,"message":"231","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":15},{"ruleId":"218","severity":1,"message":"232","line":2,"column":17,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"236","line":2,"column":29,"nodeType":"220","messageId":"221","endLine":2,"endColumn":35},{"ruleId":"233","severity":1,"message":"234","line":12,"column":5,"nodeType":"220","endLine":12,"endColumn":14,"suggestions":"237"},{"ruleId":"218","severity":1,"message":"232","line":2,"column":17,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"238","line":2,"column":23,"nodeType":"220","messageId":"221","endLine":2,"endColumn":27},{"ruleId":"218","severity":1,"message":"236","line":2,"column":29,"nodeType":"220","messageId":"221","endLine":2,"endColumn":35},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"218","severity":1,"message":"232","line":2,"column":17,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"238","line":2,"column":23,"nodeType":"220","messageId":"221","endLine":2,"endColumn":27},{"ruleId":"218","severity":1,"message":"236","line":2,"column":29,"nodeType":"220","messageId":"221","endLine":2,"endColumn":35},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"218","severity":1,"message":"232","line":2,"column":17,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"238","line":2,"column":23,"nodeType":"220","messageId":"221","endLine":2,"endColumn":27},{"ruleId":"218","severity":1,"message":"236","line":2,"column":29,"nodeType":"220","messageId":"221","endLine":2,"endColumn":35},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"218","severity":1,"message":"232","line":2,"column":17,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"238","line":2,"column":23,"nodeType":"220","messageId":"221","endLine":2,"endColumn":27},{"ruleId":"218","severity":1,"message":"236","line":2,"column":29,"nodeType":"220","messageId":"221","endLine":2,"endColumn":35},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"218","severity":1,"message":"222","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":26,"column":22,"nodeType":"242","messageId":"243","endLine":26,"endColumn":24},{"ruleId":"240","severity":1,"message":"241","line":40,"column":35,"nodeType":"242","messageId":"243","endLine":40,"endColumn":37},{"ruleId":"240","severity":1,"message":"244","line":44,"column":44,"nodeType":"242","messageId":"243","endLine":44,"endColumn":46},{"ruleId":"240","severity":1,"message":"244","line":94,"column":47,"nodeType":"242","messageId":"243","endLine":94,"endColumn":49},{"ruleId":"240","severity":1,"message":"244","line":115,"column":43,"nodeType":"242","messageId":"243","endLine":115,"endColumn":45},{"ruleId":"240","severity":1,"message":"244","line":125,"column":33,"nodeType":"242","messageId":"243","endLine":125,"endColumn":35},{"ruleId":"240","severity":1,"message":"244","line":160,"column":35,"nodeType":"242","messageId":"243","endLine":160,"endColumn":37},{"ruleId":"218","severity":1,"message":"222","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":14},{"ruleId":"218","severity":1,"message":"245","line":1,"column":10,"nodeType":"220","messageId":"221","endLine":1,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":121,"column":54,"nodeType":"225","endLine":121,"endColumn":140},{"ruleId":"240","severity":1,"message":"241","line":87,"column":26,"nodeType":"242","messageId":"243","endLine":87,"endColumn":28},{"ruleId":"240","severity":1,"message":"244","line":140,"column":43,"nodeType":"242","messageId":"243","endLine":140,"endColumn":45},{"ruleId":"246","severity":1,"message":"247","line":141,"column":17,"nodeType":"248","endLine":141,"endColumn":27},{"ruleId":"240","severity":1,"message":"241","line":146,"column":39,"nodeType":"242","messageId":"243","endLine":146,"endColumn":41},{"ruleId":"240","severity":1,"message":"244","line":158,"column":51,"nodeType":"242","messageId":"243","endLine":158,"endColumn":53},{"ruleId":"246","severity":1,"message":"247","line":160,"column":25,"nodeType":"248","endLine":160,"endColumn":35},{"ruleId":"228","severity":1,"message":"229","line":212,"column":37,"nodeType":"225","endLine":212,"endColumn":124},{"ruleId":"228","severity":1,"message":"229","line":110,"column":37,"nodeType":"225","endLine":110,"endColumn":134},{"ruleId":"218","severity":1,"message":"249","line":146,"column":10,"nodeType":"220","messageId":"221","endLine":146,"endColumn":25},{"ruleId":"218","severity":1,"message":"231","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":15},{"ruleId":"218","severity":1,"message":"232","line":2,"column":17,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"238","line":2,"column":23,"nodeType":"220","messageId":"221","endLine":2,"endColumn":27},{"ruleId":"218","severity":1,"message":"236","line":2,"column":29,"nodeType":"220","messageId":"221","endLine":2,"endColumn":35},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"240","severity":1,"message":"244","line":57,"column":26,"nodeType":"242","messageId":"243","endLine":57,"endColumn":28},{"ruleId":"240","severity":1,"message":"244","line":169,"column":51,"nodeType":"242","messageId":"243","endLine":169,"endColumn":53},{"ruleId":"228","severity":1,"message":"229","line":232,"column":29,"nodeType":"225","endLine":232,"endColumn":133},{"ruleId":"250","severity":1,"message":"251","line":283,"column":21,"nodeType":"225","endLine":283,"endColumn":121},{"ruleId":"223","severity":1,"message":"224","line":283,"column":21,"nodeType":"225","endLine":283,"endColumn":121},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"240","severity":1,"message":"241","line":45,"column":61,"nodeType":"242","messageId":"243","endLine":45,"endColumn":63},{"ruleId":"218","severity":1,"message":"252","line":52,"column":19,"nodeType":"220","messageId":"221","endLine":52,"endColumn":27},{"ruleId":"240","severity":1,"message":"244","line":63,"column":43,"nodeType":"242","messageId":"243","endLine":63,"endColumn":45},{"ruleId":"240","severity":1,"message":"244","line":76,"column":51,"nodeType":"242","messageId":"243","endLine":76,"endColumn":53},{"ruleId":"240","severity":1,"message":"244","line":86,"column":41,"nodeType":"242","messageId":"243","endLine":86,"endColumn":43},{"ruleId":"240","severity":1,"message":"244","line":119,"column":43,"nodeType":"242","messageId":"243","endLine":119,"endColumn":45},{"ruleId":"223","severity":1,"message":"224","line":213,"column":21,"nodeType":"225","endLine":213,"endColumn":145},{"ruleId":"218","severity":1,"message":"239","line":2,"column":37,"nodeType":"220","messageId":"221","endLine":2,"endColumn":40},{"ruleId":"218","severity":1,"message":"222","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"244","line":59,"column":24,"nodeType":"242","messageId":"243","endLine":59,"endColumn":26},{"ruleId":"246","severity":1,"message":"247","line":60,"column":17,"nodeType":"248","endLine":60,"endColumn":40},{"ruleId":"240","severity":1,"message":"244","line":68,"column":24,"nodeType":"242","messageId":"243","endLine":68,"endColumn":26},{"ruleId":"223","severity":1,"message":"224","line":92,"column":29,"nodeType":"225","endLine":109,"endColumn":33},{"ruleId":"240","severity":1,"message":"244","line":95,"column":53,"nodeType":"242","messageId":"243","endLine":95,"endColumn":55},{"ruleId":"240","severity":1,"message":"241","line":102,"column":50,"nodeType":"242","messageId":"243","endLine":102,"endColumn":52},{"ruleId":"240","severity":1,"message":"244","line":157,"column":51,"nodeType":"242","messageId":"243","endLine":157,"endColumn":53},{"ruleId":"218","severity":1,"message":"253","line":210,"column":13,"nodeType":"220","messageId":"221","endLine":210,"endColumn":23},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'config' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BootStrap' is defined but never used.","'body' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setArtists'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.artist] as a second argument to the useEffect Hook.",["256"],"'Button' is defined but never used.",["257"],"'Card' is defined but never used.","'Nav' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'format' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'LoadBundlenames' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'response' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},"Add dependencies array: [props.artist]",{"range":"261","text":"262"},{"range":"263","text":"262"},[444,444],", [props.artist]",[596,596]]