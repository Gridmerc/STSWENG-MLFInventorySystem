[{"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\index.js":"1","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\App.js":"2","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\MainMenu.js":"4","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Login\\Login.js":"5","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\config.js":"6","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\LeftMenu.js":"7","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Banner.js":"8","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\artistCard.js":"9","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\CashierMenu.js":"10","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\AdminMenu.js":"11","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Counter.js":"12","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\salesReportWindow.js":"13","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\NewOrderWindow.js":"14","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\FinancialWindow.js":"15","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\manageArtistsWindow.js":"16","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\manageEventsWindow.js":"17","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\manageItemsWindow.js":"18","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\manageBundlesWindow.js":"19","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\AddArtistForm.js":"20","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\SalesReportWindow.js":"21","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\newOrderWindow.js":"22","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\AddBundlesForm.js":"23","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\ManageBundlesWindow.js":"24"},{"size":502,"mtime":1611452269877,"results":"25","hashOfConfig":"26"},{"size":917,"mtime":1611465680550,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1611403077000,"results":"28","hashOfConfig":"26"},{"size":3291,"mtime":1611799553937,"results":"29","hashOfConfig":"26"},{"size":2668,"mtime":1611466054622,"results":"30","hashOfConfig":"26"},{"size":414,"mtime":1611466054631,"results":"31","hashOfConfig":"26"},{"size":414,"mtime":1611798381246,"results":"32","hashOfConfig":"26"},{"size":4822,"mtime":1611466054623,"results":"33","hashOfConfig":"26"},{"size":4355,"mtime":1611798385933,"results":"34","hashOfConfig":"26"},{"size":2636,"mtime":1611798377887,"results":"35","hashOfConfig":"26"},{"size":4256,"mtime":1611783735057,"results":"36","hashOfConfig":"26"},{"size":727,"mtime":1611452269875,"results":"37","hashOfConfig":"26"},{"size":3283,"mtime":1611639549993,"results":"38","hashOfConfig":"26"},{"size":7337,"mtime":1611798380154,"results":"39","hashOfConfig":"26"},{"size":10071,"mtime":1611798379283,"results":"40","hashOfConfig":"26"},{"size":4392,"mtime":1611452269863,"results":"41","hashOfConfig":"26"},{"size":8146,"mtime":1611638468281,"results":"42","hashOfConfig":"26"},{"size":11513,"mtime":1611638471829,"results":"43","hashOfConfig":"26"},{"size":7702,"mtime":1611783088157,"results":"44","hashOfConfig":"26"},{"size":4084,"mtime":1611466054619,"results":"45","hashOfConfig":"26"},{"size":8086,"mtime":1611799996817,"results":"46","hashOfConfig":"26"},{"size":8384,"mtime":1611780023754,"results":"47","hashOfConfig":"26"},{"size":7607,"mtime":1611796654138,"results":"48","hashOfConfig":"26"},{"size":7847,"mtime":1611783981684,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"15nh3mp",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\index.js",[],["112","113"],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\App.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\MainMenu.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\config.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\LeftMenu.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Banner.js",["114","115","116","117"],"import React, {Component} from 'react';\r\nimport Counter from './Counter';\r\nimport BootStrap, {NavDropdown} from 'react-bootstrap'\r\nimport config from '../../config'\r\nclass Banner extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            counters: [\r\n                {id: 1, value: 0}, /* sold */\r\n                {id: 2, value: 0}, /* days left */\r\n                {id: 3, value: 0}, /* hours left */\r\n                {id: 4, value: 0}, /* minutes left */\r\n                {id: 5, value: 0}  /* seconds left */\r\n            ]\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const response = await fetch(config.API_URI + '/login', {\r\n          method: 'GET',\r\n        });\r\n        const body = await response.text();\r\n        this.props.history.push(\"/\");\r\n      };\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"Header\">\r\n                <div id=\"upperSection\" className=\"container mt-4\">\r\n                    <div className=\"card d-flex flex-row bg-secondary text-light\" style={{width: \"69.3rem\",  height: \"10rem\"}}>\r\n                        <div className=\"SalesCounter\">\r\n                            <div id=\"salesCounter\" className=\"d-flex flex-col text-center\">\r\n                                <div id=\"soldCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberSold\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[0].id} value={this.state.counters[0].value} id={this.state.counters[0].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">sold</h5>\r\n                                </div>\r\n                                <div id=\"dayCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberDays\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[1].id} value={this.state.counters[1].value} id={this.state.counters[1].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">day left</h5>\r\n                                </div>\r\n                                <div id=\"hoursCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberHours\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[2].id} value={this.state.counters[2].value} id={this.state.counters[2].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">hours left</h5>\r\n                                </div>\r\n                                <div id=\"minutesCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberMinutes\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[3].id} value={this.state.counters[3].value} id={this.state.counters[3].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">minutes left</h5>\r\n                                </div>\r\n                                <div id=\"secondsCounter\" className=\"col\">\r\n                                    <h1 id=\"counterNumberSeconds\" className=\"font-weight-bold\">\r\n                                        <Counter key={this.state.counters[4].id} value={this.state.counters[4].value} id={this.state.counters[4].id} />\r\n                                    </h1>\r\n                                    <h5 id=\"textLabel\">seconds left</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <input type=\"hidden\" id=\"totalSeconds\" value=\"totalSeconds\" />\r\n\r\n                        <div id=\"userMenuIcon\">\r\n                            <img id=\"logoImageGrey\" src=\"photo/logo-grey.png\" />\r\n                        </div>\r\n\r\n                        <div className=\"UserMenu\">\r\n                            <div id=\"userMenu\" className=\"d-flex flex-col text-left\">\r\n                                <div id=\"userIcon\" className=\"col\">\r\n                                    <img id=\"userIconImage\" src=\"../photo/icon-user.png\" />\r\n                                </div>\r\n\r\n                                <NavDropdown title=\"User\" id=\"user-dropdown\">\r\n                                <NavDropdown.Item eventKey=\"1.1\" onClick={this.handleSubmit}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Banner;","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\artistCard.js",["118","119","120"],"// JavaScript source code\r\nimport React, { Component, useState } from 'react';\r\nimport { Modal} from 'react-bootstrap'\r\nimport config from '../../config'\r\n\r\nclass ArtistCardsList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            artist: [],\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artist !== prevProps.artist) {\r\n          this.setState({artist: this.props.artist})\r\n        }\r\n      }\r\n\r\n    render() {\r\n        console.log(this.state.artist);\r\n        const artistCards = this.state.artist.map(artist => <ArtistCard   key={artist.artistID}\r\n                                                                          artistName={artist.artistName}\r\n                                                                          income={artist.income} \r\n                                                                          items={artist.items}\r\n                                                                          bundles={artist.bundles}/>)                                           \r\n        return (\r\n            <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 p-2 mx-1 w-100\">\r\n                {artistCards}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ArtistCard(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    var itemList = [];\r\n    var bundleList = [];\r\n\r\n    if(props.items)\r\n    {\r\n        itemList = props.items.filter(function(item){\r\n            if (typeof item === 'undefined' || item === false) {\r\n              return false; // skip\r\n            }\r\n            return true;\r\n          }).map(item => <ArtistCardItem  key={item._id}\r\n            itemName={item.itemName} \r\n            stocksQuantity={item.stockQuantity}\r\n            itemPrice={item.itemPrice}\r\n            itemsSold={item.itemsSold}/>)  \r\n    }\r\n    \r\n    if(props.bundles)\r\n    {\r\n        bundleList = props.bundles.filter(function(bundle){\r\n            if (typeof bundle === 'undefined' || bundle === false) {\r\n              return false; // skip\r\n            }\r\n            return true;\r\n          }).map(bundle=> <ArtistCardItem  key={bundle._id}\r\n            itemName={bundle.bundleName} \r\n            stocksQuantity={bundle.bundleStock}\r\n            itemPrice={bundle.bundlePrice}\r\n            itemsSold={bundle.bundleSold}/>)  \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col mb-2 px-2\" id=\"{{artistID}}-card\">\r\n                <div className=\"card mx-0\">\r\n                    <div className=\"card-body\">\r\n                        <h5>{props.artistName}</h5>\r\n                        <p className=\"card-text\"><b>PHP {props.income} </b> </p>\r\n                        <a href=\"#\" className=\"stretched-link\" onClick={handleShow} style={{ size: \"0px\"}}></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={show} onHide={handleClose} id=\"artistModal\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"artistModalTitle\">{props.artistName}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead bg-secondary text-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">Item/Bundle</th>\r\n                                <th scope=\"col\">Stocks</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Quantity sold</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"artistSales\" >\r\n                            {itemList}\r\n                            {bundleList}\r\n                        </tbody>\r\n                    </table>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ArtistCardItem(props) {\r\n    return(\r\n    <tr>\r\n        <td> {props.itemName}       </td>\r\n        <td> {props.stocksQuantity} </td>\r\n        <td> PHP {props.itemPrice}  </td>\r\n        <td> {props.itemsSold} </td>\r\n    </tr>    \r\n    );\r\n}\r\n\r\nexport default ArtistCardsList;\r\n","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\CashierMenu.js",["121","122","123","124"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap'\r\n\r\nimport NewOrderWindow from \"./NewOrderWindow\";\r\nimport FinancialWindow from \"./FinancialWindow\";\r\nimport SalesReportWindow from \"../Home/SalesReportWindow\";\r\n\r\n\r\nconst CashierMenu = (props) => {\r\n\r\n    const [artists, setArtists] = useState([]);\r\n    useEffect(() => {\r\n          setArtists(props.artist);\r\n    });\r\n    \r\n    const [newOrderShow, setNewOrderShow] = useState(false);\r\n    const [financialShow, setFinancialShow] = useState(false);\r\n    const [salesReportShow, setSalesReportShow] = useState(false);\r\n\r\n    const handleNewOrderClose = () => setNewOrderShow(false);\r\n    const handleNewOrderShow = () => setNewOrderShow(true);\r\n\r\n    const handleFinancialClose = () => setFinancialShow(false);\r\n    const handleFinancialShow = () => setFinancialShow(true);\r\n\r\n    const handleSalesReportClose = () => setSalesReportShow(false);\r\n    const handleSalesReportShow = () => setSalesReportShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Card id=\"leftMenu\" className=\"card p-3\" style={{ width: \"20rem\" }}>\r\n                <Nav.Item id=\"newOrderButtonSection\" className=\"nav-item text-center mb-2\">\r\n                    <Button id=\"newOrderButton\" className=\"btn btn-secondary btn-md col-11\" onClick={handleNewOrderShow} data-target=\"#newOrderWindow\">new order</Button>\r\n                </Nav.Item>\r\n                <hr />\r\n                <Nav.Item id=\"stocksSection\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">stocks</h6>\r\n                    <Nav.Link id=\"restockItem\" href=\"#\" className=\"nav-link\" onClick={handleFinancialShow} data-target=\"#financialWindow\">Restock item</Nav.Link>\r\n                </Nav.Item>\r\n                <hr />\r\n                <Nav.Item id=\"salesReportSection\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">sales report</h6>\r\n                    <Nav.Link id=\"currentSalesReport\" href=\"#\" className=\"nav-link\" onClick={handleSalesReportShow} data-target=\"#salesReportWindow\">Current sales report</Nav.Link>\r\n                </Nav.Item>\r\n            </Card>\r\n\r\n            <div id=\"modalSection\">\r\n                <NewOrderWindow handleClose={handleNewOrderClose} show={newOrderShow} artists={artists}/>\r\n                <FinancialWindow handleClose={handleFinancialClose} show={financialShow} artists={artists}/>\r\n                <SalesReportWindow handleClose={handleSalesReportClose} show={salesReportShow} artists={artists}/>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default CashierMenu","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\AdminMenu.js",["125","126","127","128","129"],"import React, { Component, useState, useEffect } from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport manageArtistsWindow from \"./Artists/manageArtistsWindow\";\r\nimport manageItemsWindow from \"./Items/manageItemsWindow\";\r\nimport ManageBundlesWindow from \"./Bundles/ManageBundlesWindow\";\r\nimport manageEventsWindow from \"./Events/manageEventsWindow\";\r\nimport SalesReportWindow from \"../Home/SalesReportWindow\";\r\n\r\nconst AdminMenu = (props) => {\r\n\r\n    const [artists, setArtists] = useState([]);\r\n    useEffect(() => {\r\n          setArtists(props.artist);\r\n    });\r\n\r\n    const [manageArtistsShow, setManageArtistsShow] = useState(false);\r\n    const [manageItemsShow, setManageItemsShow] = useState(false);\r\n    const [manageBundlesShow, setManageBundlesShow] = useState(false);\r\n    const [manageEventsShow, setManageEventsShow] = useState(false);\r\n    const [salesReportShow, setSalesReportShow] = useState(false);\r\n\r\n    const handleManageArtistsClose = () => setManageArtistsShow(false);\r\n    const handleManageArtistsShow = () => setManageArtistsShow(true);\r\n\r\n    const handleManageItemsClose = () => setManageItemsShow(false);\r\n    const handleManageItemsShow = () => setManageItemsShow(true);\r\n\r\n    const handleManageBundlesClose= () => setManageBundlesShow(false);\r\n    const handleManageBundlesShow = () => setManageBundlesShow(true);\r\n\r\n    const handleManageEventsClose = () => setManageEventsShow(false);\r\n    const handleManageEventsShow = () => setManageEventsShow(true);\r\n\r\n    const handleSalesReportClose = () => setSalesReportShow(false);\r\n    const handleSalesReportShow = () => setSalesReportShow(true);\r\n    return(\r\n        <div>\r\n            <Card id=\"leftMenu\" className=\"card p-3\" style={{ width: \"20rem\" }}>\r\n                <Nav.Item  id=\"manageMenu\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">manage</h6>\r\n                    <Nav.Item id=\"manageArtistsItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageArtists\" href=\"#a\" className=\"nav-link\" onClick={handleManageArtistsShow} data-target=\"#manageArtistsWindow\">Manage artists</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item id=\"manageItemsItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageItems\" href=\"#\" className=\"nav-link\"  onClick={handleManageItemsShow} data-target=\"#manageItemsWindow\">Manage items</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item id=\"manageBundlesItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageBundles\" href=\"#\" className=\"nav-link\"  onClick={handleManageBundlesShow} data-target=\"#manageBundlesWindow\">Manage bundles</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item id=\"manageEventsItem\" className=\"text-center\">\r\n                        <Nav.Link id=\"manageEvents\" href=\"#\" className=\"nav-link\" onClick={handleManageEventsShow}   data-target=\"#manageEventsWindow\">Manage events</Nav.Link>\r\n                    </Nav.Item>\r\n                    \r\n                </Nav.Item>\r\n                <hr />\r\n                <Nav.Item id=\"salesReportSection\" className=\"nav-item\">\r\n                    <h6 className=\"text-center\">sales report</h6>\r\n                    <Nav.Item id=\"salesReportItem\" className=\"text-center\">\r\n                    <Nav.Link id=\"currentSalesReport\" href=\"#\" className=\"nav-link\" onClick={handleSalesReportShow} data-target=\"#salesReportWindow\">Current sales report</Nav.Link>\r\n                    </Nav.Item>\r\n                    \r\n                </Nav.Item>\r\n            </Card>\r\n\r\n            <div id=\"modalSection\">\r\n                {manageArtistsWindow(handleManageArtistsClose, manageArtistsShow)}\r\n                {manageItemsWindow(handleManageItemsClose, manageItemsShow)}\r\n                <ManageBundlesWindow handleClose={handleManageBundlesClose} show={manageBundlesShow} artists={artists}/>\r\n                {manageEventsWindow(handleManageEventsClose, manageEventsShow)}\r\n                <SalesReportWindow handleClose={handleSalesReportClose} show={salesReportShow} artists={artists} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n/*   \r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default AdminMenu","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Partials\\Counter.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\salesReportWindow.js",["130"],"import React from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\n\r\nfunction salesReportWindow(handleClose, show) {\r\n    return (\r\n        <Modal onHide={handleClose} show={show} size=\"lg\" id=\"salesReportWindow\">\r\n            <Form>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title className=\"modal-title\">Current sales report</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Card.Header className=\"bg-secondary row mx-0 d-flex justify-content-around\">\r\n                    <select id=\"artistSalesListDropdown\" className=\"form-control salesReportArtist col-md-7 col-sm-12 my-1\" name=\"selectedArtistSales\">\r\n                        <option value=\"\" className=\"defaultVal\" disabled selected>select artist</option>\r\n                        <option value=\"{{artistID}}\"></option>\r\n                    </select>\r\n                    <select id=\"sortItemsDropdown\" className=\"form-control salesReportSort d-md-inline-block col-md-4 col-sm-12 my-1\" name=\"selectedArtistSales\">\r\n                        <option value=\"name\" className=\"defaultVal\" selected>sort by name</option>\r\n                        <option value=\"price asc\">sort by price (ascending)</option>\r\n                        <option value=\"price desc\">sort by price (descending)</option>\r\n                        <option value=\"sold asc\">sort by quantity sold (ascending)</option>\r\n                        <option value=\"sold desc\">sort by quantity sold (descending)</option>\r\n                    </select>\r\n                </Card.Header>\r\n\r\n                <Modal.Body>\r\n                    <table id=\"soldItemsTable\" className=\"table table-bordered\">\r\n                        <thead className=\"thead bg-secondary text-light\">\r\n                            <tr className=\"row m-0\">\r\n                                <th className=\"col-6\">Item/Bundle</th>\r\n                                <th className=\"col-3\">Price</th>\r\n                                <th className=\"col-3\">Quantity sold</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"salesList\">\r\n                            <tr className='row m-0'><td className='col'>Select an artist</td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table id=\"totalSalesTable\" className=\"table\">\r\n                        <tr className=\"row m-0\">\r\n                            <td className=\"font-weight-bold col-9\">Total</td>\r\n                            <td className=\"col-3\" id=\"totalSoldSales\">PHP 0.00</td>\r\n                        </tr>\r\n                        <tbody>\r\n                        </tbody>\r\n                    </table>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button id=\"saveOrder\" className=\"btn btn-secondary btn-sm col-2\" value=\"export data\">check out</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default salesReportWindow",["131","132"],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\NewOrderWindow.js",["133","134","135","136","137"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport config from '../../config'\r\n\r\nclass NewOrderWindow extends Component{\r\n  \r\n  constructor(){\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            purchases: [],\r\n            currentArtistID: \"\",\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n    handleChange(event) {\r\n        this.setState({currentArtistID: event.target.value});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var itemList = [];\r\n        var bundleList = [];\r\n\r\n        const CheckoutTable = ({children}) => {\r\n            return (\r\n                <table id=\"checkoutItemsList\" className=\"table table-borderless table-sm\">\r\n                    {children}\r\n                </table>\r\n            )\r\n        }\r\n\r\n        const LoadItemCards = (props) => {\r\n\r\n            const list = props.purchases\r\n            const newPurchase = <AddedItem _id={props._id} itemName={props.itemName} itemPrice={props.itemPrice} />\r\n\r\n            return (\r\n                <div class=\"col mb-3\" id={props._id + \"-buyItem\"} style={{ padding: \"5px\" }}>\r\n                    <Card>\r\n                        <img src={props.itemPicture} className=\"card-img-top\" alt=\"...\" />\r\n                        <Card.Body>\r\n                            <Card.Title> {props.itemName} </Card.Title>\r\n                            <Card.Text>PHP {props.itemPrice.toFixed(2)}</Card.Text>\r\n                            <Card.Text>{props.stocksQuantity} left</Card.Text>\r\n                            <a href=\"#\" className=\"stretched-link\" onClick={() => {\r\n                                list.push(newPurchase)\r\n                            }}></a>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        for(let i=0; i < this.state.artists.length; i++)\r\n        {\r\n                if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n                {\r\n                    if(this.state.artists[i].items)\r\n                    {\r\n                        itemList = this.state.artists[i].items.filter(function(item){\r\n                            if (typeof item === 'undefined' || item === false) {\r\n                            return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(item => <LoadItemCards key={item._id}\r\n                            _id={item._id}\r\n                            itemName={item.itemName}\r\n                            stocksQuantity={item.stockQuantity}\r\n                            itemPrice={item.itemPrice}\r\n                            itemPicture={item.itemPicture}\r\n                            purchases={this.state.purchases} />)  \r\n                    }\r\n                \r\n                    if(this.state.artists[i].bundles)\r\n                    {\r\n                        bundleList = this.state.artists[i].bundles.filter(function (bundle) {\r\n                            if (typeof bundle === 'undefined' || bundle === false) {\r\n                                return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(bundle => <LoadItemCards key={bundle._id}\r\n                            _id={bundle._id}\r\n                            itemName={bundle.bundleName}\r\n                            stocksQuantity={bundle.bundleStock}\r\n                            itemPrice={bundle.bundlePrice}\r\n                            itemPicture={bundle.bundlePicture}\r\n                            />)  \r\n                    }\r\n                }\r\n        }\r\n\r\n        const artistOptions = this.state.artists.map(artist =>\r\n            <LoadNames artistID={artist.artistID}\r\n                artistName={artist.artistName} />\r\n        )\r\n\r\n        return (\r\n            <Modal onHide={this.props.handleClose} show={this.props.show} size=\"lg\" id=\"newOrderWindow\">\r\n                <Form id=\"artistSelect\" className=\"form\" method='POST' action=\"/orderCheckOut\">\r\n                    <Modal.Header closeButton>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"modal-body d-flex flex-col\">\r\n                        <Card id=\"buySection\" className=\"card\" style={{ width: \"60rem\", height: \"30rem\" }}>\r\n                            <Card.Header id=\"buyArtistSection\" className=\"card-header bg-secondary\">\r\n                                <select id=\"artistsListDropdown\" className=\"form-control\" name=\"selectedArtist\" onChange={this.handleChange} value={this.state.currentArtistID}>\r\n                                    <option value=\"\" className=\"defaultVal\" disabled selected>select artist</option>\r\n                                        {artistOptions}\r\n                                </select>\r\n                            </Card.Header>\r\n                            <Card.Body id=\"buyItemSection\" className=\"card-body overflow-auto\">\r\n                                <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 itemGrid\" id=\"buyItem\">\r\n                                    {bundleList}\r\n                                    {itemList}\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card id=\"checkoutSection align-items-end\" className=\"card p-4\" style={{ width: \"30rem\", height: \"30rem\" }}>\r\n                            <Card.Title>items</Card.Title>\r\n                            <div style={{ 'overflow-y': \"auto\", 'overflow-x': \"hidden\" }}>\r\n                                <CheckoutTable>\r\n                                    {this.state.purchases}\r\n                                </CheckoutTable>\r\n                            </div>\r\n                            <div className=\"mt-auto\">\r\n                                <table id=\"totalItems\" class=\"card-title table\">\r\n                                    <tr>\r\n                                        <th>total</th>\r\n                                        <th id=\"totalPrice\" className='text-right'>0</th>\r\n                                    </tr>\r\n                                </table>\r\n                                <Button className=\"btn btn-secondary col-sm-8\" id=\"checkoutBtn\" type=\"button\" value=\"check out\">check out</Button>\r\n                            </div>\r\n                        </Card>\r\n                    </Modal.Body>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nfunction AddedItem(props) {\r\n    return (\r\n        <tr id={props._id + \"Cart\"}>\r\n            <td>\r\n                <Button className='close' ><span>&times;</span></Button>\r\n            </td>\r\n            <td id={props._id + \"Quantity\"}>(1) {props.itemName} </td>\r\n            <td id={props._id + \"Total\"} className='text-right'> {props.itemPrice.toFixed(2)} </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default NewOrderWindow\r\n","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\FinancialWindow.js",["138","139","140","141","142","143","144","145","146"],"import React, {Component} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport config from \"../../config\";\r\n\r\nclass FinancialWindow extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtistID: \"\",\r\n            Amount: \"\",\r\n            currentItem: \"\",\r\n            currentType: \"\",\r\n        }\r\n    \r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleAmountChange = this.handleAmountChange.bind(this)\r\n        this.handleFinancialItem = this.handleFinancialItem.bind(this)\r\n        this.addStocks = this.addStocks.bind(this)\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({currentArtistID: event.target.value});\r\n      }\r\n\r\n      handleAmountChange(event) {\r\n        this.setState({Amount: event.target.value});\r\n      }\r\n    \r\n      componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n    }\r\n\r\n    handleFinancialItem(itemID, itemType) {\r\n        if (itemID !== this.state.currentItem) {         \r\n            this.setState({currentItem: itemID,\r\n                            currentType: itemType})\r\n        }\r\n    }\r\n\r\n    addStocks = async e => {\r\n        if (this.state.Amount > 0 && this.state.currentItem != \"\") {\r\n            var details = {\r\n                item: this.state.currentItem,\r\n                itemType: this.state.currentType,\r\n                value: this.state.Amount\r\n            }\r\n\r\n            const response = await fetch(config.API_URI + \"/restockItem\", {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(details)\r\n              });\r\n\r\n              \r\n              this.props.handleClose();\r\n              alert(\"Success\");\r\n        } else if (this.state.currentItem == \"\") {\r\n            alert('Error adding stocks Please select an artist and their item to restock.');\r\n        } else {\r\n            alert('Error adding stocks Please input a valid number of stocks to add.');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        var itemList = [];\r\n        var bundleList = [];\r\n    \r\n        for(let i=0; i < this.state.artists.length; i++)\r\n        {\r\n                if(this.state.artists[i].artistID == this.state.currentArtistID)\r\n                {\r\n                    if(this.state.artists[i].items)\r\n                    {\r\n                        itemList = this.state.artists[i].items.filter(function(item){\r\n                            if (typeof item === 'undefined' || item === false) {\r\n                            return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(item => {\r\n                            if(item._id == this.state.currentItem){\r\n                                return (<LoadItemCards  key={item._id}\r\n                                _id={item._id}\r\n                                itemName={item.itemName} \r\n                                stocksQuantity={item.stockQuantity}\r\n                                itemPrice={item.itemPrice}\r\n                                itemPicture={item.itemPicture}\r\n                                handleFinancialItem={this.handleFinancialItem}\r\n                                itemType=\"item\"\r\n                                class=\"col mb-3 bg-secondary\"/>)\r\n                            }\r\n                            else{\r\n                                return(<LoadItemCards  key={item._id}\r\n                                    _id={item._id}\r\n                                    itemName={item.itemName} \r\n                                    stocksQuantity={item.stockQuantity}\r\n                                    itemPrice={item.itemPrice}\r\n                                    itemPicture={item.itemPicture}\r\n                                    handleFinancialItem={this.handleFinancialItem}\r\n                                    itemType=\"item\"\r\n                                    class=\"col mb-3\"/>)\r\n                            }\r\n                        })  \r\n                    }\r\n                    \r\n                    if(this.state.artists[i].bundles)\r\n                    {\r\n                        bundleList = this.state.artists[i].bundles.filter(function(bundle){\r\n                            if (typeof bundle === 'undefined' || bundle === false) {\r\n                            return false; // skip\r\n                            }\r\n                            return true;\r\n                        }).map(bundle=> {\r\n                            if(bundle._id == this.state.currentItem){\r\n                               return (<LoadItemCards  key={bundle._id}\r\n                                _id={bundle._id}\r\n                                itemName={bundle.bundleName} \r\n                                stocksQuantity={bundle.bundleStock}\r\n                                itemPrice={bundle.bundlePrice}\r\n                                itemPicture={bundle.bundlePicture}\r\n                                handleFinancialItem={this.handleFinancialItem}\r\n                                itemType=\"bundle\"\r\n                                class=\"col mb-3 bg-secondary\"/>)\r\n                            }\r\n                            else{\r\n                                return (<LoadItemCards  key={bundle._id}\r\n                                    _id={bundle._id}\r\n                                    itemName={bundle.bundleName} \r\n                                    stocksQuantity={bundle.bundleStock}\r\n                                    itemPrice={bundle.bundlePrice}\r\n                                    itemPicture={bundle.bundlePicture}\r\n                                    handleFinancialItem={this.handleFinancialItem}\r\n                                    itemType=\"bundle\"\r\n                                    class=\"col mb-3\"/>)\r\n                            }\r\n                        })\r\n                         \r\n                    }\r\n                }\r\n        }\r\n    \r\n        const artistOptions = this.state.artists.map(artist =>\r\n            <LoadNames artistID={artist.artistID}\r\n                artistName={artist.artistName} />\r\n        )\r\n        return (\r\n            <Modal onHide={this.props.handleClose} show={this.props.show} size=\"lg\" id=\"financialWindow\">\r\n                <Form>\r\n                    <Modal.Header className=\"bg-secondary\" closeButton>\r\n                        <div id=\"artistSelectSection\">\r\n                            <select id=\"artistsListDropdown\" class=\"form-control\" name=\"financeSelectedArtist\" onChange={this.handleChange} value={this.state.currentArtistID}>\r\n                                <option value=\"\" class=\"defaultVal\" disabled selected>select artist</option>\r\n                                {artistOptions}\r\n                            </select>\r\n                        </div>\r\n                        <Modal.Title className=\"modal-title\"></Modal.Title>\r\n                    </Modal.Header>\r\n    \r\n                    <Modal.Body>\r\n                        <div id=\"artistItemsSection\">\r\n                            <div id=\"otherInputSection\">\r\n                                <div id=\"itemList\">\r\n                                    <Form.Group>\r\n                                        <Form.Label for=\"financialItemList\" className=\"font-weight-normal\">select one item</Form.Label>\r\n                                        <Card id=\"financialItemList\" className=\"card overflow-auto\" style={{ height: \"20rem\" }} data-spy=\"scroll\" data-offset=\"0\">\r\n                                            <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-3 row-cols-lg-4 itemGrid\" id=\"financialItem\">\r\n                                            {bundleList}\r\n                                            {itemList}\r\n                                            </div>\r\n                                        </Card>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <div id=\"textFields\">\r\n                                    <Form.Group>\r\n                                        <Form.Label for=\"newPriceStock\" className=\"font-weight-normal\">quantity to add</Form.Label>\r\n                                        <Form.Control required id=\"newPriceStock\" className=\"form-control\" type=\"number\" min={1} step=\"1\" value={this.state.Amount} onChange={this.handleAmountChange} />\r\n                                    </Form.Group>\r\n                                </div>\r\n    \r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n    \r\n                    <Modal.Footer>\r\n                        <Button id=\"addStocks\" className=\"btn btn-secondary btn-sm col-2\" value=\"save\" onClick={this.addStocks}>save</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    \r\n   \r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nfunction LoadItemCards(props) {\r\n    return (\r\n        <div className={props.class} id={props._id + \"-financialItem\"} style={{padding: \"5px\"}}>\r\n            <div className=\"card\">\r\n                <img src={props.itemPicture} className=\"card-img-top\" alt=\"...\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\"> {props.itemName} </h5>\r\n                    <p className=\"card-text\">PHP {props.itemPrice.toFixed(2)}</p>\r\n                    <p className=\"card-text\">{props.stocksQuantity} left</p>\r\n                    <a href=\"#\" class=\"stretched-link\" onClick={()=>props.handleFinancialItem(props._id, props.itemType)} style={{size: \"0px\"}}></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinancialWindow","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\manageArtistsWindow.js",["147","148","149","150"],"import React from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport AddArtistForm from \"./AddArtistForm\";\r\n\r\nfunction manageArtistsWindow(handleClose, show){\r\n    return (\r\n       <Modal onHide={handleClose} id=\"manageArtistsWindow\" show={show} size=\"lg\">\r\n       <div className=\"modal-content\">\r\n            <Modal.Header className=\"bg-white\" closeButton>\r\n                <Modal.Title>Manage Artists</Modal.Title>\r\n            </Modal.Header>\r\n   \r\n           <div className=\"modal-body\">\r\n               <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageArtistsNav\" role=\"tablist\">\r\n                   <li className=\"nav-item\">\r\n                       <a className=\"nav-link active\" id=\"editArtistsOption\" data-toggle=\"tab\" href=\"#editArtistsSection\" role=\"tab\" aria-controls=\"editArtistsSection\" aria-selected=\"true\">Edit</a>\r\n                   </li>\r\n                   <li className=\"nav-item\">\r\n                       <a className=\"nav-link\" id=\"addArtistsOption\" data-toggle=\"tab\" href=\"#addArtistsSection\" role=\"tab\" aria-controls=\"addArtistsSection\" aria-selected=\"false\">Add</a>\r\n                   </li>\r\n               </ul>\r\n   \r\n               <div className=\"tab-content p-2\" id=\"manageArtistList\">\r\n                   <div id=\"editArtistsSection\" className=\"tab-pane fade show active pb-4\" role=\"tabpanel\" aria-labelledby=\"editArtistsOption\">\r\n                       <h5 className=\"modal-title\">Edit artist</h5>\r\n                       <p id=\"manageReminder\">Select the artist you want to edit or delete.</p>\r\n   \r\n                       <div className=\"form-group mb-4\">\r\n                           <form id=\"editArtist\" className=\"form\" action=\"#\">\r\n                               <div className=\"form-row mb-4\">\r\n                                   <div className=\"col\">\r\n                                       <select id=\"artistsListDropdownEdit\" className=\"form-control col-14\" name=\"artistsListDropdownEdit\" required>\r\n                                           <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                                           \r\n                                           <option value=\"{{artistID}}\"></option>\r\n                                           \r\n                                       </select>\r\n                                   </div>\r\n                                   <div className=\"col\">\r\n                                       <button name=\"deleteArtistButton\" id=\"deleteArtistButton\" className=\"btn btn-secondary \" type=\"button\"><i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\r\n                                   </div>\r\n                               </div>\r\n                                       \r\n                               <div className=\"form-group mb-2\">\r\n                                   <label htmlFor=\"editArtistName\" className=\"font-weight-normal\">artist name</label>\r\n                                   <input id=\"editArtistName\" className=\"form-control clearInput\" name=\"editArtistName\" type=\"text\" required />\r\n                               </div>\r\n                               <div className=\"form-group mb-2\">\r\n                                   <label htmlFor=\"editArtistIDNo\" className=\"font-weight-normal\">artist ID number</label>\r\n                                   <input id=\"editArtistIDNo\" className=\"form-control clearInput\" name=\"editArtistIDNo\" type=\"number\" min=\"0\" max=\"99999999\" required />\r\n                               </div>\r\n                               <div className=\"form-group mb-2\">\r\n                                   <label htmlFor=\"editArtistPassword\" className=\"font-weight-normal\">artist password (leave blank for unchanged password)</label>\r\n                                   <input id=\"editArtistPassword\" className=\"form-control clearInput\" name=\"editArtistPassword\" type=\"text\"/>\r\n                               </div>\r\n                               <button name=\"editArtistButton\" id=\"editArtistButton\" className=\"btn btn-secondary btn-md col-4 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                           </form>\r\n   \r\n                       </div>\r\n                   </div>\r\n                   <AddArtistForm />\r\n               </div>\r\n           </div>\r\n       </div>\r\n           \r\n       </Modal>\r\n    );\r\n   }\r\n\r\n   export default manageArtistsWindow","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Events\\manageEventsWindow.js",["151","152","153","154"],"import React from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\n\r\nfunction manageEventsWindow(handleClose, show){\r\n    return (\r\n       <Modal onHide={handleClose} id=\"manageEventsWindow\" show={show} size=\"lg\">\r\n                <Modal.Header className=\"bg-white\" closeButton>\r\n                    <Modal.Title>Manage Events</Modal.Title>\r\n                </Modal.Header>\r\n                <div className=\"modal-body\">\r\n                    <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageEventsNav\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" id=\"editEventsOption\" data-toggle=\"tab\" href=\"#editEventsSection\" role=\"tab\" aria-controls=\"editEventsSection\" aria-selected=\"true\">Edit</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"addEventsOption\" data-toggle=\"tab\" href=\"#addEventsSection\" role=\"tab\" aria-controls=\"addEventsSection\" aria-selected=\"false\">Add</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content p-2\" id=\"manageBundleList\">\r\n                        <div div id=\"editEventsSection\" className=\"tab-pane fade show active pb-4\" role=\"tabpanel\" aria-labelledby=\"editEventsOption\">\r\n                            <h5 className=\"modal-title\">Edit event</h5>\r\n                            <p id=\"manageReminder\">Select the event you want to set as current. You can also edit and delete an event.</p>\r\n                            <span className=\"font-weight-bold\">Current event name and time span: </span><span>name at HH:MM - HH:MM</span>\r\n                            <form className=\"form mt-3\" method=\"post\" action=\"/admin/editEvent\">\r\n                                <div className=\"form-row mb-2\">\r\n                                    <div className=\"col mb-3\">\r\n                                        <select id=\"selectedEvent\" className=\"form-control col-12\" name=\"selectedEvent\" required>\r\n                                            <option className=\"defaultVal\" value=\"\" disabled defaultValue>select event</option>\r\n                                            \r\n                                            <option value=\"{{eventID}}\"></option>\r\n                                            \r\n                                        </select>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <button name=\"deleteEventButton\" id=\"deleteEventButton\" className=\"btn btn-secondary\" type=\"button\" onClick=\"deleteEvent(event);\"><i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group ml-1 mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <input name=\"editSetCurrentEvent\" id=\"editSetCurrentEvent\" className=\"form-check-input clearInput\" value=\"1\" type=\"checkbox\" />\r\n                                        <label htmlFor=\"editSetCurrentEvent\" className=\"form-check-label\">Set as current event</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <label htmlFor=\"editEventName\" className=\"font-weight-normal mr-2\">event name</label>\r\n                                        <input name=\"editEventName\" id=\"editEventName\" className=\"form-control col-14 clearInput\" type=\"text\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <label htmlFor=\"editStartEventDate\" className=\"font-weight-normal mr-2\">start date</label>\r\n                                        <input name=\"editStartEventDate\" id=\"editStartEventDate\" className=\"form-control clearInput\" type=\"date\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <label htmlFor=\"editEndEventDate\" className=\"font-weight-normal mr-2\">end date</label>\r\n                                        <input name=\"editEndEventDate\" id=\"editEndEventDate\" className=\"form-control clearInput\" type=\"date\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"hidden\" id='editCurrentEvent' name = 'editCurrentEvent' value='0'/>\r\n                                <button name=\"editEventButton\" id=\"editEventButton\" className=\"btn btn-secondary btn-md col-4 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                            </form>\r\n                        </div>\r\n                        <div div id=\"addEventsSection\" className=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"addEventsOption\">\r\n                            <h5 className=\"modal-title\">Add event</h5>\r\n                            <p id=\"manageReminder\">Fill in the form below before adding a new event.</p>\r\n                            <form className=\"form\" method=\"POST\" action=\"/admin/addEvent\">\r\n                                <div className=\"form-row mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <label htmlFor=\"newEventName\" className=\"font-weight-normal mr-2\">event name</label>\r\n                                        <input name=\"newEventName\" id=\"newEventName\" className=\"form-control col-14 clearInput\" type=\"text\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group ml-1 mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <input name=\"addSetCurrentEvent\" id=\"addSetCurrentEvent\" className=\"form-check-input clearInput\" value=\"1\" type=\"checkbox\" />\r\n                                        <label htmlFor=\"addSetCurrentEvent\" className=\"form-check-label\">Set as current event</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <label htmlFor=\"addStartEventDate\" className=\"font-weight-normal mr-2\">start date</label>\r\n                                        <input name=\"addStartEventDate\" id=\"addStartEventDate\" className=\"form-control clearInput\" type=\"date\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row mb-2\">\r\n                                    <div className=\"col mb-2\">\r\n                                        <label htmlFor=\"addEndEventDate\" className=\"font-weight-normal mr-2\">end date</label>\r\n                                        <input name=\"addEndEventDate\" id=\"addEndEventDate\" className=\"form-control clearInput\" type=\"date\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"hidden\" id='addCurrentEvent' name = 'addCurrentEvent' value='0'/>\r\n                                <button name=\"addEventButton\" id=\"addEventButton\" className=\"btn btn-secondary btn-md col-4 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n       </Modal>\r\n    );\r\n}\r\n\r\nexport default manageEventsWindow","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Items\\manageItemsWindow.js",["155","156","157","158","159","160"],"import React from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\n\r\nfunction manageItemsWindow(handleClose, show){\r\n    return (\r\n       <Modal onHide={handleClose} id=\"manageItemsWindow\" show={show} size=\"lg\">\r\n           <div className=\"modal-content\">\r\n                <Modal.Header className=\"bg-white\" closeButton>\r\n                    <Modal.Title>Manage Items</Modal.Title>\r\n                </Modal.Header>\r\n                <div className=\"modal-body\">\r\n                    <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageArtistsNav\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" id=\"editItemOption\" data-toggle=\"tab\" href=\"#editItemSection\" role=\"tab\" aria-controls=\"editItemSection\" aria-selected=\"true\">Edit</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" id=\"addItemOption\" data-toggle=\"tab\" href=\"#addItemSection\" role=\"tab\" aria-controls=\"addItemSection\" aria-selected=\"false\">Add</a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab-content p-2\" id=\"manageItemList\">\r\n                        <div id=\"editItemSection\" className=\"tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"editItemOption\">\r\n                            <h5 className=\"modal-title\">Edit item</h5>\r\n                            <p id=\"manageReminder\">Select the artist and their item you want to edit or delete.</p>\r\n\r\n                            <form id=\"artistSelectEdit\" className=\"form\" method=\"POST\" action=\"/admin/editItem\" encType=\"multipart/form-data\">\r\n                                <div id=\"otherInputSection\" className=\"mt-2\">\r\n                                    <div id=\"editSelectorsSection\" className=\"row mb-2\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <select id=\"artistsListDropdownItemEdit\" className=\"form-control col-11 manageItemsArtist\" name=\"artistsListDropdownItemEdit\" required>\r\n                                                    <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                                                    \r\n                                                    <option value=\"{{artistID}}\"></option>\r\n                                                    \r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col ml-2\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"col\">\r\n                                                    <select id=\"artistsListDropdownItem\" className=\"form-control manageItemsList\" name=\"artistsListDropdownItem\" required>\r\n                                                        <option className=\"defaultVal\" value=\"\" disabled defaultValue>select item of artist</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"col\">\r\n                                                    <button name=\"deleteItemButton\" id=\"deleteItemButton\" className=\"btn btn-secondary \" type=\"button\" onClick=\"deleteItem(event);\"><i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div id=\"\" className=\"row selectedSection\">\r\n                                        <div id=\"editItemsSection\" className=\"col mt-2\">\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <label htmlFor=\"editItemName\" className=\"font-weight-normal mr-2\">item name</label>\r\n                                                <input name=\"editItemName\" id=\"editItemName\" className=\"form-control col-11 clearInput\" type=\"text\" required />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <label htmlFor=\"editItemStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                                                <input name=\"editItemStockQuantity\" id=\"editItemStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" min=\"0\" max=\"99999999\" required />\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <div id=\"\" className=\"col itemPhotoPicker\">\r\n                                                <div className=\"d-flex justify-content-center\">\r\n                                                    <img name=\"editItemPhoto\" id=\"editItemPhoto\" className=\"photos\" src=\"photo/item-photo.png\" />\r\n                                                </div>\r\n                                                <div className=\"custom-file mt-2\">\r\n                                                    <input name=\"editItemPhotoPickerInput\" id=\"editItemPhotoPickerInput\" type=\"file\" className=\"custom-file-input clearInput\" onChange=\"document.getElementById('editItemPhoto').src = window.URL.createObjectURL(this.files[0])\" />\r\n                                                    <label className=\"custom-file-label \" htmlFor=\"editItemPhotoPickerInput\">Choose photo</label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col\">\r\n                                            <button name=\"editItemButton\" id=\"editItemButton\" className=\"btn btn-secondary btn-md col-6 mt-3 float-right\" type=\"submit\">save</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            \r\n                        </div>\r\n                        <div id=\"addItemSection\" className=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"addItemOption\">\r\n                            <h5 className=\"modal-title\">Add item</h5>\r\n                            <p id=\"manageReminder\">Fill in the form below before adding a new item.</p>\r\n                            <form id=\"artistSelectaddItem\" className=\"form\" method=\"POST\" action=\"/admin/addItem\" encType=\"multipart/form-data\">\r\n                                <div id=\"otherInputSection\" className=\"mt-2\">\r\n                                    <div id=\"editSelectorsSection\" className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"form-group mb-2\">\r\n                                            \r\n                                                <select id=\"artistsListDropdownItemAdd\" className=\"form-control\" name=\"artistsListDropdownItemAdd\" required>\r\n                                                    <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                                                    \r\n                                                    <option value=\"{{artistID}}\"></option>\r\n                                                    \r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row selectedSection\">\r\n                                        <div id=\"textFields\" className=\"col\" style={{width: \"500px\"}}>\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <label htmlFor=\"newItemName\" className=\"font-weight-normal mr-2\">item name</label>\r\n                                                <input name=\"newItemName\" id=\"newItemName\" className=\"form-control col-11 clearInput\" type=\"text\" required />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <label htmlFor=\"newItemPriceStock\" className=\"font-weight-normal mr-2\">price</label>\r\n                                                <input name=\"newItemPriceStock\" id=\"newItemPriceStock\" className=\"form-control col-11 clearInput\" type=\"number\" min=\"0\" max=\"99999999\" required />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <label htmlFor=\"newItemStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                                                <input name=\"newItemStockQuantity\" id=\"newItemStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" min=\"0\" max=\"99999999\" required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col itemPhotoPicker\">\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                <img name=\"newItemPhoto\" id=\"newItemPhoto\" className = \"photos\" src=\"photo/item-photo.png\" />\r\n                                            </div>\r\n                                            <div className=\"custom-file mt-2\">\r\n                                                <input name=\"addItemPhotoPickerInput\" id=\"addItemPhotoPickerInput\" type=\"file\" className=\"custom-file-input clearInput\" onChange=\"document.getElementById('newItemPhoto').src = window.URL.createObjectURL(this.files[0])\" required />\r\n                                                <label className=\"custom-file-label \" htmlFor=\"addItemPhotoPickerInput\">Choose photo</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col\">\r\n                                            <button name=\"addItemButton\" id=\"addItemButton\" className=\"btn btn-secondary btn-md col-6 mt-3 float-right\" type=\"submit\">save</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </Modal>\r\n    );\r\n}\r\n\r\nexport default manageItemsWindow","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\manageBundlesWindow.js",["161","162","163","164","165"],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Artists\\AddArtistForm.js",[],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Home\\SalesReportWindow.js",["166","167","168","169","170"],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Cashier\\newOrderWindow.js",["171","172","173","174"],"C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\AddBundlesForm.js",["175"],"import React, {Component} from 'react';\r\n\r\nclass AddBundlesForm extends Component {\r\n  \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            artists: [],\r\n            currentArtist: '',\r\n            newBundleName: '',\r\n            newBundlePriceStock: '',\r\n            newBundleStockQuantity: '',\r\n            reponseToPost: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        //this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    \r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props.artists !== prevProps.artists) {\r\n          this.setState({artists: this.props.artists})\r\n        }\r\n\r\n    }\r\n      \r\n    /*\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.newArtistName !== '' && this.state.newArtistIDNo!== '' && this.state.newArtistPassword !== '') {\r\n\r\n            const response = await fetch('/admin/getArtist/?artistID='+this.state.newArtistIDNo + \"&projection=_id artistID artistName\", {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n              });\r\n              const body = await response.text();\r\n              \r\n              this.setState({ responseToPost: body });\r\n              \r\n              if(this.state.responseToPost === \"false\"){\r\n                  this.addArtist();                \r\n              }\r\n              else {\r\n                    alert('Error adding artist','Artist ID already exist. Please type in another artist ID'); //change to SWEET ALERT\r\n                     e.preventDefault();\r\n              } \r\n        }\r\n      };\r\n\r\n  addArtist = async e => {\r\n    const addResponse = await fetch('/admin/addArtist', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({newArtistIDNo: this.state.newArtistIDNo, newArtistName: this.state.newArtistName, newArtistPassword: this.state.newArtistPassword}),\r\n                  });\r\n                  const body = await addResponse.text();\r\n    \r\n                  this.setState({ responseToPost: body });\r\n\r\n                  if (this.state.responseToPost) {\r\n                    window.location = '/admin';\r\n                  }\r\n  }\r\n  */\r\n\r\n  render(){\r\n\r\n    const artistOptions = this.state.artists.map(artist =>\r\n        <LoadNames key={artist.artistID} artistID={artist.artistID}\r\n            artistName={artist.artistName} />\r\n    )\r\n    \r\n \r\n    console.log(this.state.artists)\r\n\r\n    return (\r\n        <div id=\"addBundlesSection\" className=\"tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"addBundleOption\">\r\n        <form id=\"addArtistSelectBundle\" className=\"form\" method='POST'  encType=\"multipart/form-data\">\r\n            <h5 className=\"modal-title\">Add bundle</h5>\r\n            <p id=\"manageReminder\">Fill in the form below before adding a new bundle.</p>\r\n            <div id=\"otherInputSection\" className=\"mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col mt-2\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <select id=\"artistsListDropdownBundleAdd\" className=\"form-control\" name=\"artistsListDropdownBundleAdd\" required>\r\n                                <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                               {artistOptions}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row selectedSection\">\r\n                    <div id=\"textFields\" className=\"col\" style={{width: \"500px\"}}>\r\n                        <div className=\"form-group mb-2\">\r\n                            <label htmlFor=\"newBundleName\" className=\"font-weight-normal mr-2\">bundle name</label>\r\n                            <input name=\"newBundleName\" id=\"newBundleName\" className=\"form-control col-11 clearInput\" type=\"text\" value={this.state.newBundleName} onChange={this.handleChange} required />\r\n                        </div>\r\n                        <div className=\"form-group mb-2\">\r\n                            <label htmlFor=\"newBundlePriceStock\" className=\"font-weight-normal mr-2\">price</label>\r\n                            <input name=\"newBundlePriceStock\" id=\"newBundlePriceStock\" className=\"form-control col-11 clearInput\" type=\"number\"  value={this.state.newBundlePriceStock} onChange={this.handleChange} min=\"0\" max=\"99999999\" required />\r\n                        </div>\r\n                        <div className=\"form-group mb-2\">\r\n                            <label htmlFor=\"newBundleStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                            <input name=\"newBundleStockQuantity\" id=\"newBundleStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" value={this.state.newBundleStockQuantity} onChange={this.handleChange} min=\"0\" max=\"99999999\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"BundlePhotoPicker2\" className=\"col m-4\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <img name=\"newBundlePhoto\" id=\"newBundlePhoto\" className = \"photos\" src=\"photo/item-photo.png\" />\r\n                        </div>\r\n                        <div className=\"custom-file mt-2\">\r\n                            <input name=\"addBundlePhotoPicker\" id=\"addBundlePhotoPicker\" type=\"file\" className=\"custom-file-input clearInput\" /*onChange=\"document.getElementById('newBundlePhoto').src = window.URL.createObjectURL(this.files[0])\"*/ required />\r\n                            <label className=\"custom-file-label \" htmlFor=\"addBundlePhotoPicker\">Choose photo</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <input type=\"hidden\" id=\"addSelectedItems\" name=\"addSelectedItems\" value=\"\" />\r\n                        <div id=\"addBundleItemsSection\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"addBundleItemsSection\" className=\"font-weight-normal\">select bundle items</label>\r\n                                <div id=\"addBundleItemsSection\" className=\"card overflow-auto\" style={{height: \"10rem\"}} data-spy=\"scroll\" data-offset=\"0\">\r\n                                    <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-3 row-cols-lg-4 itemGrid\" id=\"addSelectBundleItems\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button name=\"addBundleButton\" id=\"addBundleButton\" className=\"btn btn-secondary btn-md col-6 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction LoadNames(props) {\r\n    return (\r\n        <option value={props.artistID}>{props.artistName}</option>\r\n    );\r\n}\r\n\r\nexport default AddBundlesForm","C:\\Users\\Niko\\Desktop\\git\\s15-mp15\\STSWENG-MLFInventorySystem\\frontend\\src\\Components\\Admin\\Bundles\\ManageBundlesWindow.js",["176","177","178","179","180","181"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, Form, Card, Button, Nav } from 'react-bootstrap';\r\nimport AddBundlesForm from './AddBundlesForm';\r\n\r\n\r\nconst ManageBundlesWindow = (props) => {\r\n    \r\n    const [artists, setArtists] = useState([]);\r\n    useEffect(() => {\r\n          setArtists(props.artists);\r\n    });\r\n\r\n    return (\r\n       <Modal onHide={props.handleClose} id=\"manageBundlesWindow\" show={props.show} size=\"lg\">\r\n        <div className=\"modal-content\">\r\n            <Modal.Header className=\"bg-white\" closeButton>\r\n                <Modal.Title>Manage Bundles</Modal.Title>\r\n            </Modal.Header>\r\n            <div className=\"modal-body\">\r\n                <ul className=\"nav nav-tabs mb-3 mt-2\" id=\"manageBundlesNav\" role=\"tablist\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" id=\"editBundleOption\" data-toggle=\"tab\" href=\"#editBundlesSection\" role=\"tab\" aria-controls=\"editBundlesSection\" aria-selected=\"true\">Edit</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" id=\"addBundleOption\" data-toggle=\"tab\" href=\"#addBundlesSection\" role=\"tab\" aria-controls=\"addBundlesSection\" aria-selected=\"false\">Add</a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"tab-content p-2\" id=\"manageBundleList\">\r\n                    <div id=\"editBundlesSection\" className=\"tab-pane fade show active pb-4\" role=\"tabpanel\" aria-labelledby=\"editBundleOption\">\r\n                        <h5 className=\"modal-title\">Edit bundle</h5>\r\n                        <p id=\"manageReminder\">Select the artist and their bundle you want to edit or delete.</p>\r\n\r\n                        <form id=\"editArtistSelectBundle\" className=\"form\" method='POST' action=\"/admin/editBundle\" encType=\"multipart/form-data\">\r\n                            <div id=\"otherInputSection\" className=\"mt-3\">\r\n                                <div id=\"editSelectorsSection\" className=\"row mb-2\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"form-group\">\r\n                                            <select id=\"artistsListDropdownBundleEdit\" className=\"form-control col-11\" name=\"artistsListDropdownBundleEdit\" required>\r\n                                                <option className=\"defaultVal\" value=\"\" disabled defaultValue>select artist</option>\r\n                                                \r\n                                                <option value=\"{{artistID}}\"></option>\r\n                                                \r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col ml-2\">\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"col\">\r\n                                                <select id=\"artistsListDropdownBundle\" className=\"form-control\" name=\"artistsListDropdownBundle\" required>\r\n                                                    <option className=\"defaultVal\" value=\"\" disabled defaultValue>select bundle</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col\">\r\n                                                <button name=\"deleteBundleButton\" id=\"deleteBundleButton\" className=\"btn btn-secondary \" type=\"button\" /*onClick=\"deleteBundle(event);\"*/><i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"row selectedSection\">\r\n                                    <div id=\"textFields\" className=\"col\" style={{width: \"500px\"}}>\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <label htmlFor=\"editBundleName\" className=\"font-weight-normal mr-2\">bundle name</label>\r\n                                            <input name=\"editBundleName\" id=\"editBundleName\" className=\"form-control col-11 clearInput\" type=\"text\" required />\r\n                                        </div>\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <label htmlFor=\"editBundleStockQuantity\" className=\"font-weight-normal mr-2\">quantity</label>\r\n                                            <input name=\"editBundleStockQuantity\" id=\"editBundleStockQuantity\" className=\"form-control col-11 clearInput\" type=\"number\" min=\"0\" max=\"99999999\" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div id=\"BundlePhotoPicker1\" className=\"col mt-2\">\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                            <img name=\"editBundlePhoto\" id=\"editBundlePhoto\" className=\"photos\" src=\"photo/item-photo.png\" />\r\n                                        </div>\r\n                                        <div className=\"custom-file mt-2\">\r\n                                            <input name=\"editBundlePhotoPicker\" id=\"editBundlePhotoPicker\" type=\"file\" className=\"custom-file-input clearInput\" /*onChange=\"document.getElementById('editBundlePhoto').src = window.URL.createObjectURL(this.files[0])\"*/ />\r\n                                            <label className=\"custom-file-label \" htmlFor=\"editBundlePhotoPicker\">Choose photo</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <input type=\"hidden\" id=\"editSelectedItems\" name=\"editSelectedItems\" value=\"\" />\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div id=\"editBundleItemsSection\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"editBundleItemsList\" className=\"font-weight-normal\">select bundle items</label>\r\n                                                <div id=\"editBundleItemsList\" className=\"card overflow-auto\" style={{height: \"10rem\"}} data-spy=\"scroll\" data-offset=\"0\">\r\n                                                    <div className=\"row row-cols-1 row-cols-sm-1 row-cols-md-3 row-cols-lg-4 itemGrid\" id=\"editSelectBundleItems\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <button name=\"addBundleButton\" id=\"editBundleButton\" className=\"btn btn-secondary btn-md col-6 mt-4 mb-2 float-right\" type=\"submit\">save</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                    <AddBundlesForm artists={artists}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n       </Modal>\r\n    );\r\n}\r\n\r\nexport default ManageBundlesWindow",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":17},{"ruleId":"186","severity":1,"message":"190","line":27,"column":15,"nodeType":"188","messageId":"189","endLine":27,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":75,"column":29,"nodeType":"193","endLine":75,"endColumn":81},{"ruleId":"191","severity":1,"message":"192","line":81,"column":37,"nodeType":"193","endLine":81,"endColumn":92},{"ruleId":"186","severity":1,"message":"194","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":79,"column":25,"nodeType":"193","endLine":79,"endColumn":108},{"ruleId":"197","severity":1,"message":"198","line":79,"column":25,"nodeType":"193","endLine":79,"endColumn":108},{"ruleId":"186","severity":1,"message":"199","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"200","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":15},{"ruleId":"186","severity":1,"message":"201","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":12,"column":5,"nodeType":"188","endLine":12,"endColumn":14,"suggestions":"204"},{"ruleId":"186","severity":1,"message":"199","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"200","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":15},{"ruleId":"186","severity":1,"message":"201","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"205","line":2,"column":29,"nodeType":"188","messageId":"189","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":12,"column":5,"nodeType":"188","endLine":12,"endColumn":14,"suggestions":"206"},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"182","replacedBy":"208"},{"ruleId":"184","replacedBy":"209"},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"186","severity":1,"message":"194","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":14},{"ruleId":"195","severity":1,"message":"196","line":54,"column":29,"nodeType":"193","endLine":56,"endColumn":32},{"ruleId":"197","severity":1,"message":"198","line":54,"column":29,"nodeType":"193","endLine":56,"endColumn":32},{"ruleId":"210","severity":1,"message":"211","line":65,"column":51,"nodeType":"212","messageId":"213","endLine":65,"endColumn":53},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"210","severity":1,"message":"214","line":45,"column":61,"nodeType":"212","messageId":"213","endLine":45,"endColumn":63},{"ruleId":"186","severity":1,"message":"215","line":52,"column":19,"nodeType":"188","messageId":"189","endLine":52,"endColumn":27},{"ruleId":"210","severity":1,"message":"211","line":63,"column":43,"nodeType":"212","messageId":"213","endLine":63,"endColumn":45},{"ruleId":"210","severity":1,"message":"211","line":76,"column":51,"nodeType":"212","messageId":"213","endLine":76,"endColumn":53},{"ruleId":"210","severity":1,"message":"211","line":86,"column":41,"nodeType":"212","messageId":"213","endLine":86,"endColumn":43},{"ruleId":"210","severity":1,"message":"211","line":119,"column":43,"nodeType":"212","messageId":"213","endLine":119,"endColumn":45},{"ruleId":"195","severity":1,"message":"196","line":216,"column":21,"nodeType":"193","endLine":216,"endColumn":145},{"ruleId":"197","severity":1,"message":"198","line":216,"column":21,"nodeType":"193","endLine":216,"endColumn":145},{"ruleId":"186","severity":1,"message":"201","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"216","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":27},{"ruleId":"186","severity":1,"message":"205","line":2,"column":29,"nodeType":"188","messageId":"189","endLine":2,"endColumn":35},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"186","severity":1,"message":"201","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"216","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":27},{"ruleId":"186","severity":1,"message":"205","line":2,"column":29,"nodeType":"188","messageId":"189","endLine":2,"endColumn":35},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"186","severity":1,"message":"201","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"216","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":27},{"ruleId":"186","severity":1,"message":"205","line":2,"column":29,"nodeType":"188","messageId":"189","endLine":2,"endColumn":35},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"192","line":69,"column":53,"nodeType":"193","endLine":69,"endColumn":146},{"ruleId":"191","severity":1,"message":"192","line":122,"column":49,"nodeType":"193","endLine":122,"endColumn":142},{"ruleId":"186","severity":1,"message":"201","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"216","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":27},{"ruleId":"186","severity":1,"message":"205","line":2,"column":29,"nodeType":"188","messageId":"189","endLine":2,"endColumn":35},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"191","severity":1,"message":"192","line":68,"column":45,"nodeType":"193","endLine":68,"endColumn":142},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"186","severity":1,"message":"194","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":34,"column":43,"nodeType":"212","messageId":"213","endLine":34,"endColumn":45},{"ruleId":"210","severity":1,"message":"211","line":44,"column":33,"nodeType":"212","messageId":"213","endLine":44,"endColumn":35},{"ruleId":"210","severity":1,"message":"211","line":79,"column":35,"nodeType":"212","messageId":"213","endLine":79,"endColumn":37},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":79,"column":29,"nodeType":"193","endLine":81,"endColumn":32},{"ruleId":"197","severity":1,"message":"198","line":79,"column":29,"nodeType":"193","endLine":81,"endColumn":32},{"ruleId":"210","severity":1,"message":"211","line":90,"column":51,"nodeType":"212","messageId":"213","endLine":90,"endColumn":53},{"ruleId":"191","severity":1,"message":"192","line":119,"column":29,"nodeType":"193","endLine":119,"endColumn":126},{"ruleId":"186","severity":1,"message":"201","line":2,"column":17,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"216","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":27},{"ruleId":"186","severity":1,"message":"205","line":2,"column":29,"nodeType":"188","messageId":"189","endLine":2,"endColumn":35},{"ruleId":"186","severity":1,"message":"207","line":2,"column":37,"nodeType":"188","messageId":"189","endLine":2,"endColumn":40},{"ruleId":"202","severity":1,"message":"217","line":9,"column":5,"nodeType":"188","endLine":9,"endColumn":14,"suggestions":"218"},{"ruleId":"191","severity":1,"message":"192","line":74,"column":45,"nodeType":"193","endLine":74,"endColumn":142},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'BootStrap' is defined but never used.","Identifier","unusedVar","'body' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'config' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'Modal' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setArtists'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.artist] as a second argument to the useEffect Hook.",["221"],"'Button' is defined but never used.",["222"],"'Nav' is defined but never used.",["219"],["220"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'response' is assigned a value but never used.","'Card' is defined but never used.","React Hook useEffect contains a call to 'setArtists'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.artists] as a second argument to the useEffect Hook.",["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},"Add dependencies array: [props.artist]",{"range":"229","text":"230"},{"range":"231","text":"230"},"Add dependencies array: [props.artists]",{"range":"232","text":"233"},[444,444],", [props.artist]",[596,596],[333,333],", [props.artists]"]